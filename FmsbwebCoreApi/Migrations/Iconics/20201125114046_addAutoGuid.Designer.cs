// <auto-generated />
using System;
using FmsbwebCoreApi.Context.Iconics;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FmsbwebCoreApi.Migrations.Iconics
{
    [DbContext(typeof(IconicsContext))]
    [Migration("20201125114046_addAutoGuid")]
    partial class addAutoGuid
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Iconics.KepServerTagName", b =>
                {
                    b.Property<string>("TagName")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dept")
                        .HasColumnName("dept")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsLastCounter")
                        .HasColumnName("isLastCounter")
                        .HasColumnType("bit");

                    b.Property<string>("Line")
                        .HasColumnName("line")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Stamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("TagId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TagName");

                    b.ToTable("KEPserverTagNames");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Iconics.KepServerTagNameGroup", b =>
                {
                    b.Property<Guid>("KepServerTagNameGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("KepServerTagNameGroupId");

                    b.ToTable("KepServerTagNameGroups");

                    b.HasData(
                        new
                        {
                            KepServerTagNameGroupId = new Guid("9914adfb-beb4-45b8-841e-92a62644cdb9"),
                            GroupName = "A2",
                            TimeStamp = new DateTime(2020, 11, 25, 6, 40, 45, 591, DateTimeKind.Local).AddTicks(7330)
                        },
                        new
                        {
                            KepServerTagNameGroupId = new Guid("b77a6852-48bb-4737-b311-72f0b89eb1a9"),
                            GroupName = "A3",
                            TimeStamp = new DateTime(2020, 11, 25, 6, 40, 45, 594, DateTimeKind.Local).AddTicks(842)
                        },
                        new
                        {
                            KepServerTagNameGroupId = new Guid("ab52ed25-e05a-43d2-a5b5-886c9f81016b"),
                            GroupName = "A4",
                            TimeStamp = new DateTime(2020, 11, 25, 6, 40, 45, 594, DateTimeKind.Local).AddTicks(1192)
                        },
                        new
                        {
                            KepServerTagNameGroupId = new Guid("70f09fe2-69b5-4163-9ba9-ee7dd44392a8"),
                            GroupName = "A5",
                            TimeStamp = new DateTime(2020, 11, 25, 6, 40, 45, 594, DateTimeKind.Local).AddTicks(1288)
                        },
                        new
                        {
                            KepServerTagNameGroupId = new Guid("a5faa0ae-79a7-4982-b5e6-9f02b6336c78"),
                            GroupName = "A6",
                            TimeStamp = new DateTime(2020, 11, 25, 6, 40, 45, 594, DateTimeKind.Local).AddTicks(1545)
                        },
                        new
                        {
                            KepServerTagNameGroupId = new Guid("a2a448c1-4395-45c8-b52d-521cef7e0857"),
                            GroupName = "A7",
                            TimeStamp = new DateTime(2020, 11, 25, 6, 40, 45, 594, DateTimeKind.Local).AddTicks(1651)
                        },
                        new
                        {
                            KepServerTagNameGroupId = new Guid("5acb6ebc-fb7f-435e-b48a-e02e798e6a8b"),
                            GroupName = "A8",
                            TimeStamp = new DateTime(2020, 11, 25, 6, 40, 45, 594, DateTimeKind.Local).AddTicks(1745)
                        },
                        new
                        {
                            KepServerTagNameGroupId = new Guid("beba32fb-23ee-40e5-8d0d-046c990eb374"),
                            GroupName = "A9",
                            TimeStamp = new DateTime(2020, 11, 25, 6, 40, 45, 594, DateTimeKind.Local).AddTicks(1834)
                        });
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Iconics.KepServerTagNameMonitor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("KepServerTagNameGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KepServerTagNameGroupId");

                    b.HasIndex("TagName");

                    b.ToTable("KepServerTagNameMonitors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("db786411-2031-45f3-8859-ea7e68c7cd7f"),
                            KepServerTagNameGroupId = new Guid("9914adfb-beb4-45b8-841e-92a62644cdb9"),
                            TagName = "A2_PACKOUT_APC",
                            TimeStamp = new DateTime(2020, 11, 25, 6, 40, 45, 593, DateTimeKind.Local).AddTicks(9712)
                        },
                        new
                        {
                            Id = new Guid("9b65c9bf-a1c2-418b-9717-84312a93302e"),
                            KepServerTagNameGroupId = new Guid("b77a6852-48bb-4737-b311-72f0b89eb1a9"),
                            TagName = "A3_APC",
                            TimeStamp = new DateTime(2020, 11, 25, 6, 40, 45, 594, DateTimeKind.Local).AddTicks(1110)
                        },
                        new
                        {
                            Id = new Guid("8be0315b-85d1-420e-ab08-385069df78d8"),
                            KepServerTagNameGroupId = new Guid("ab52ed25-e05a-43d2-a5b5-886c9f81016b"),
                            TagName = "A4_M3_APC",
                            TimeStamp = new DateTime(2020, 11, 25, 6, 40, 45, 594, DateTimeKind.Local).AddTicks(1241)
                        },
                        new
                        {
                            Id = new Guid("fa27bca7-0fdb-4f3c-959d-06a458cdd708"),
                            KepServerTagNameGroupId = new Guid("70f09fe2-69b5-4163-9ba9-ee7dd44392a8"),
                            TagName = "A5_APC",
                            TimeStamp = new DateTime(2020, 11, 25, 6, 40, 45, 594, DateTimeKind.Local).AddTicks(1334)
                        },
                        new
                        {
                            Id = new Guid("7ae528bd-ab15-4497-85b5-2cf2165fdd9f"),
                            KepServerTagNameGroupId = new Guid("a5faa0ae-79a7-4982-b5e6-9f02b6336c78"),
                            TagName = "A6_M2_APC",
                            TimeStamp = new DateTime(2020, 11, 25, 6, 40, 45, 594, DateTimeKind.Local).AddTicks(1604)
                        },
                        new
                        {
                            Id = new Guid("b5ec7f4d-2978-4e3b-b46f-e69063385a0b"),
                            KepServerTagNameGroupId = new Guid("a2a448c1-4395-45c8-b52d-521cef7e0857"),
                            TagName = "A7_M3_APC",
                            TimeStamp = new DateTime(2020, 11, 25, 6, 40, 45, 594, DateTimeKind.Local).AddTicks(1700)
                        },
                        new
                        {
                            Id = new Guid("22bebde8-74dc-46eb-a44d-606ba74127fd"),
                            KepServerTagNameGroupId = new Guid("5acb6ebc-fb7f-435e-b48a-e02e798e6a8b"),
                            TagName = "A8_APC",
                            TimeStamp = new DateTime(2020, 11, 25, 6, 40, 45, 594, DateTimeKind.Local).AddTicks(1794)
                        },
                        new
                        {
                            Id = new Guid("7570d19e-b2d3-4fe0-a264-2d1d0b425ac8"),
                            KepServerTagNameGroupId = new Guid("beba32fb-23ee-40e5-8d0d-046c990eb374"),
                            TagName = "A9_M3_APC",
                            TimeStamp = new DateTime(2020, 11, 25, 6, 40, 45, 594, DateTimeKind.Local).AddTicks(1885)
                        });
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Iconics.KepserverMachineDowntime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CurrentVal")
                        .IsRequired()
                        .HasColumnName("currentVal")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<decimal?>("DowntimeMinutes")
                        .HasColumnName("downtime_minutes")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("EndStamp")
                        .HasColumnName("end_stamp")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsInitialSave")
                        .HasColumnName("isInitialSave")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("OriginalEndStamp")
                        .HasColumnName("original_end_stamp")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("OriginalStartStamp")
                        .HasColumnName("original_start_stamp")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("StartStamp")
                        .HasColumnName("start_stamp")
                        .HasColumnType("datetime");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnName("tagName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnName("time_stamp")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("KEPServer_MachineDowntime");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Iconics.KepServerTagNameMonitor", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.Iconics.KepServerTagNameGroup", "KepServerTagNameGroup")
                        .WithMany()
                        .HasForeignKey("KepServerTagNameGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.Iconics.KepServerTagName", "KepServerTagName")
                        .WithMany()
                        .HasForeignKey("TagName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
