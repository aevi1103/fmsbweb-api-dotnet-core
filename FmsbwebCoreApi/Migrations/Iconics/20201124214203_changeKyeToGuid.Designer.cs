// <auto-generated />
using System;
using FmsbwebCoreApi.Context.Iconics;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FmsbwebCoreApi.Migrations.Iconics
{
    [DbContext(typeof(IconicsContext))]
    [Migration("20201124214203_changeKyeToGuid")]
    partial class changeKyeToGuid
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Iconics.KepServerTagName", b =>
                {
                    b.Property<string>("TagName")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dept")
                        .HasColumnName("dept")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsLastCounter")
                        .HasColumnName("isLastCounter")
                        .HasColumnType("bit");

                    b.Property<string>("Line")
                        .HasColumnName("line")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Stamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("TagId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TagName");

                    b.ToTable("KEPserverTagNames");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Iconics.KepServerTagNameGroup", b =>
                {
                    b.Property<Guid>("KepServerTagNameGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("KepServerTagNameGroupId");

                    b.ToTable("KepServerTagNameGroups");

                    b.HasData(
                        new
                        {
                            KepServerTagNameGroupId = new Guid("3a724a2e-bd4f-47f1-a0f5-830c40c770d7"),
                            GroupName = "A2",
                            TimeStamp = new DateTime(2020, 11, 24, 16, 42, 2, 978, DateTimeKind.Local).AddTicks(6386)
                        },
                        new
                        {
                            KepServerTagNameGroupId = new Guid("7bdff7de-8049-4059-8b9e-c0138af93119"),
                            GroupName = "A3",
                            TimeStamp = new DateTime(2020, 11, 24, 16, 42, 2, 980, DateTimeKind.Local).AddTicks(1793)
                        },
                        new
                        {
                            KepServerTagNameGroupId = new Guid("baddedd6-2d1c-46e8-bc25-9101ae0c6e87"),
                            GroupName = "A4",
                            TimeStamp = new DateTime(2020, 11, 24, 16, 42, 2, 980, DateTimeKind.Local).AddTicks(1978)
                        },
                        new
                        {
                            KepServerTagNameGroupId = new Guid("bfe14929-c580-4c76-b3b0-0f1250208cbb"),
                            GroupName = "A5",
                            TimeStamp = new DateTime(2020, 11, 24, 16, 42, 2, 980, DateTimeKind.Local).AddTicks(2009)
                        },
                        new
                        {
                            KepServerTagNameGroupId = new Guid("6dfe84ae-7850-44cf-bd90-26685b34bee8"),
                            GroupName = "A6",
                            TimeStamp = new DateTime(2020, 11, 24, 16, 42, 2, 980, DateTimeKind.Local).AddTicks(2047)
                        },
                        new
                        {
                            KepServerTagNameGroupId = new Guid("76eef47b-7541-4b52-884c-af130e121c77"),
                            GroupName = "A7",
                            TimeStamp = new DateTime(2020, 11, 24, 16, 42, 2, 980, DateTimeKind.Local).AddTicks(2081)
                        },
                        new
                        {
                            KepServerTagNameGroupId = new Guid("95800b52-3430-4200-a546-000dbd13bb92"),
                            GroupName = "A8",
                            TimeStamp = new DateTime(2020, 11, 24, 16, 42, 2, 980, DateTimeKind.Local).AddTicks(2107)
                        },
                        new
                        {
                            KepServerTagNameGroupId = new Guid("ffb2e046-ff1a-42e0-8b10-a24e4b17dd11"),
                            GroupName = "A9",
                            TimeStamp = new DateTime(2020, 11, 24, 16, 42, 2, 980, DateTimeKind.Local).AddTicks(2134)
                        });
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Iconics.KepServerTagNameMonitor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("KepServerTagNameGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KepServerTagNameGroupId");

                    b.HasIndex("TagName");

                    b.ToTable("KepServerTagNameMonitors");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Iconics.KepserverMachineDowntime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CurrentVal")
                        .IsRequired()
                        .HasColumnName("currentVal")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<decimal?>("DowntimeMinutes")
                        .HasColumnName("downtime_minutes")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("EndStamp")
                        .HasColumnName("end_stamp")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsInitialSave")
                        .HasColumnName("isInitialSave")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("OriginalEndStamp")
                        .HasColumnName("original_end_stamp")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("OriginalStartStamp")
                        .HasColumnName("original_start_stamp")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("StartStamp")
                        .HasColumnName("start_stamp")
                        .HasColumnType("datetime");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnName("tagName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnName("time_stamp")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("KEPServer_MachineDowntime");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Iconics.KepServerTagNameMonitor", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.Iconics.KepServerTagNameGroup", "KepServerTagNameGroup")
                        .WithMany()
                        .HasForeignKey("KepServerTagNameGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.Iconics.KepServerTagName", "KepServerTagName")
                        .WithMany()
                        .HasForeignKey("TagName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
