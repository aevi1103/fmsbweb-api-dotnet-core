// <auto-generated />
using System;
using FmsbwebCoreApi.Context.Safety;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FmsbwebCoreApi.Migrations.Safety
{
    [DbContext(typeof(SafetyContext))]
    [Migration("20191203204827_addedTestTable")]
    partial class addedTestTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Safety.Attachments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentType")
                        .HasColumnName("contentType")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<byte[]>("Data")
                        .HasColumnName("data")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Filename")
                        .HasColumnName("filename")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Incidentid")
                        .HasColumnName("incidentid")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Incidentid");

                    b.ToTable("attachments");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Safety.AuditIncidenceDeleted", b =>
                {
                    b.Property<DateTime?>("Accidentdate")
                        .HasColumnName("accidentdate")
                        .HasColumnType("datetime");

                    b.Property<string>("Bodyid")
                        .HasColumnName("bodyid")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Dept")
                        .HasColumnName("dept")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Final")
                        .HasColumnName("final")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fname")
                        .HasColumnName("fname")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Iat")
                        .HasColumnName("iat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("int");

                    b.Property<string>("Injuryid")
                        .HasColumnName("injuryid")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Injurystatid")
                        .HasColumnName("injurystatid")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Lname")
                        .HasColumnName("lname")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Reason")
                        .HasColumnName("reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shift")
                        .HasColumnName("shift")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Supervisor")
                        .HasColumnName("supervisor")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TriggerStatus")
                        .HasColumnName("triggerStatus")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Triggerdate")
                        .HasColumnName("triggerdate")
                        .HasColumnType("datetime");

                    b.ToTable("audit_incidence_deleted");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Safety.BodyPart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BodyPart1")
                        .IsRequired()
                        .HasColumnName("BodyPart")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("BodyPart");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Safety.Dept", b =>
                {
                    b.Property<string>("Dept1")
                        .HasColumnName("Dept")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Dept1");

                    b.ToTable("Dept");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Safety.EmailNotificationLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Datemodified")
                        .HasColumnName("datemodified")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ErrorMsg")
                        .HasColumnName("errorMsg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IncidentId")
                        .HasColumnName("incidentId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnName("status")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("EmailNotificationLog");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Safety.EmailsNotiRecipients", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.HasKey("Email")
                        .HasName("PK_EmailsNotificationRecipients");

                    b.ToTable("EmailsNotiRecipients");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Safety.Incidence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AccidentDate")
                        .HasColumnType("datetime");

                    b.Property<int>("BodyPartId")
                        .HasColumnName("BodyPartID")
                        .HasColumnType("int");

                    b.Property<bool>("DeletedFlag")
                        .HasColumnName("deletedFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DeletedFlagComment")
                        .HasColumnName("deletedFlagComment")
                        .HasColumnType("varchar(5000)")
                        .HasMaxLength(5000)
                        .IsUnicode(false);

                    b.Property<string>("Dept")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinalCorrectiveAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FmTipsNumber")
                        .HasColumnName("fmTipsNumber")
                        .HasColumnType("varchar(5000)")
                        .HasMaxLength(5000)
                        .IsUnicode(false);

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("InjuryId")
                        .HasColumnName("InjuryID")
                        .HasColumnType("int");

                    b.Property<string>("InjuryStatId")
                        .IsRequired()
                        .HasColumnName("InjuryStatID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("InterimActionTaken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsClosed")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isClosed")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsFmTipsCompleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isFmTipsCompleted")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnName("LName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnType("datetime");

                    b.Property<string>("ReasonSupportingOrirstat")
                        .HasColumnName("ReasonSupportingORIRStat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Supervisor")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("BodyPartId");

                    b.HasIndex("Dept");

                    b.HasIndex("InjuryId");

                    b.ToTable("Incidence");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Safety.Injuries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("InjuryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Injuries");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Safety.InjuryStat", b =>
                {
                    b.Property<string>("InjuryStat1")
                        .HasColumnName("InjuryStat")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Color")
                        .HasColumnName("color")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("InjuryStat1");

                    b.ToTable("InjuryStat");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Safety.ManHours", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasColumnName("comments")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<decimal>("Manhrs")
                        .HasColumnName("manhrs")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("MosDte")
                        .HasColumnName("mos_dte")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("ManHours");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Safety.MonthsReference", b =>
                {
                    b.Property<string>("Mos")
                        .IsRequired()
                        .HasColumnName("mos")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("MosNum")
                        .HasColumnName("mos_num")
                        .HasColumnType("int");

                    b.ToTable("Months_Reference");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Safety.RecordableRecipients", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Email");

                    b.ToTable("RecordableRecipients");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Safety.SafetyStatusRecords", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CorrectiveAction")
                        .HasColumnName("correctiveAction")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateClose")
                        .HasColumnName("dateClose")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateOpen")
                        .HasColumnName("dateOpen")
                        .HasColumnType("datetime");

                    b.Property<string>("Dept")
                        .IsRequired()
                        .HasColumnName("dept")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ResponsiblePerson")
                        .HasColumnName("responsiblePerson")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime>("Stamp")
                        .HasColumnName("stamp")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnName("status")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("SafetyStatusRecords");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Safety.SafetyTestTable", b =>
                {
                    b.Property<int>("SafetyTestTableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SafetyTestTableId");

                    b.ToTable("SafetyTestTable");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Safety.TempStacked", b =>
                {
                    b.Property<int?>("Monum")
                        .HasColumnName("monum")
                        .HasColumnType("int");

                    b.Property<string>("Mos")
                        .HasColumnName("mos")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Stat")
                        .HasColumnName("stat")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Yr")
                        .HasColumnName("yr")
                        .HasColumnType("int");

                    b.ToTable("temp_stacked");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Safety.TempStackedNoDate", b =>
                {
                    b.Property<string>("Label")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Series")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("tempStacked_NoDate");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Safety.Attachments", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.Safety.Incidence", "Incident")
                        .WithMany("Attachments")
                        .HasForeignKey("Incidentid")
                        .HasConstraintName("FK_attachments_Incidence")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Safety.Incidence", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.Safety.BodyPart", "BodyPart")
                        .WithMany("Incidence")
                        .HasForeignKey("BodyPartId")
                        .HasConstraintName("FK_Incidence_BodyPart")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.Safety.Dept", "DeptNavigation")
                        .WithMany("Incidence")
                        .HasForeignKey("Dept")
                        .HasConstraintName("FK_Incidence_Dept")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.Safety.Injuries", "Injury")
                        .WithMany("Incidence")
                        .HasForeignKey("InjuryId")
                        .HasConstraintName("FK_Incidence_Injuries")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
