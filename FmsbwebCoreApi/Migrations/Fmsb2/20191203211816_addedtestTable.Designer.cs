// <auto-generated />
using System;
using FmsbwebCoreApi.Context.Fmsb2;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FmsbwebCoreApi.Migrations.Fmsb2
{
    [DbContext(typeof(Fmsb2Context))]
    [Migration("20191203211816_addedtestTable")]
    partial class addedtestTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.ActionImprovementList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionImprovements")
                        .IsRequired()
                        .HasColumnName("actionImprovements")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("ActionImprovementList");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.ActualCycles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Actualcycle")
                        .HasColumnName("actualcycle")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<int?>("HourNum")
                        .HasColumnName("hourNum")
                        .HasColumnType("int");

                    b.Property<int>("Hourid")
                        .HasColumnName("hourid")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Hourid", "HourNum")
                        .HasName("NonClusteredIndex-20171108-154232");

                    b.ToTable("ActualCycles");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.AssemblyChangeover", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FromPart")
                        .IsRequired()
                        .HasColumnName("fromPart")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("HourId")
                        .HasColumnName("hourId")
                        .HasColumnType("int");

                    b.Property<int>("HourNum")
                        .HasColumnName("hourNum")
                        .HasColumnType("int");

                    b.Property<DateTime>("MnodifiedDate")
                        .HasColumnName("mnodifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Order")
                        .HasColumnName("order")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnName("question")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("ToPart")
                        .IsRequired()
                        .HasColumnName("toPart")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("YesNo")
                        .HasColumnName("yesNo")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("AssemblyChangeover");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.Attachments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentType")
                        .HasColumnName("contentType")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<byte[]>("Data")
                        .HasColumnName("data")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("DeptComId")
                        .HasColumnName("deptComId")
                        .HasColumnType("int");

                    b.Property<string>("Filename")
                        .HasColumnName("filename")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.AuthorizeClocks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Clocknum")
                        .HasColumnName("clocknum")
                        .HasColumnType("int");

                    b.Property<int>("MachineId")
                        .HasColumnName("machineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Clocknum", "MachineId")
                        .HasName("NonClusteredIndex-20171108-154214");

                    b.ToTable("AuthorizeClocks");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.CellCavities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cavities")
                        .HasColumnName("cavities")
                        .HasColumnType("int");

                    b.Property<int>("MachineId")
                        .HasColumnName("machineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("CellCavities");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.CheckSheet", b =>
                {
                    b.Property<int>("ChecksheetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("checksheetId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Checksheet1")
                        .IsRequired()
                        .HasColumnName("checksheet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeptId")
                        .HasColumnName("deptId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.HasKey("ChecksheetId");

                    b.ToTable("CheckSheet");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.ChecksExist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FromPart")
                        .IsRequired()
                        .HasColumnName("fromPart")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("HourId")
                        .HasColumnName("hourId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<string>("Page")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ToPart")
                        .IsRequired()
                        .HasColumnName("toPart")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("ChecksExist");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.ChecksheetResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CheckId")
                        .HasColumnName("checkId")
                        .HasColumnType("int");

                    b.Property<int>("ChecksheetId")
                        .HasColumnName("checksheetId")
                        .HasColumnType("int");

                    b.Property<int>("HourId")
                        .HasColumnName("hourId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<bool>("Status")
                        .HasColumnName("status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ChecksheetResult");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.ComponentGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComponentCategory")
                        .IsRequired()
                        .HasColumnName("componentCategory")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("ComponentGroup");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.ComponentRecords", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasColumnName("comments")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("ComponentTypeId")
                        .HasColumnName("componentTypeId")
                        .HasColumnType("int");

                    b.Property<int>("HourNum")
                        .HasColumnName("hourNum")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<int>("ProdId")
                        .HasColumnName("prodId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnName("qty")
                        .HasColumnType("int");

                    b.Property<int?>("RodReclaimId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ComponentRecords");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.ComponentReference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Component")
                        .IsRequired()
                        .HasColumnName("component")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Defectid")
                        .HasColumnName("defectid")
                        .HasColumnType("int");

                    b.Property<int>("Machineid")
                        .HasColumnName("machineid")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<int>("Multiplier")
                        .HasColumnName("multiplier")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Defectid", "Machineid")
                        .HasName("NonClusteredIndex-20171108-154302");

                    b.ToTable("ComponentReference");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.ComponentTraceability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComponentPart")
                        .IsRequired()
                        .HasColumnName("componentPart")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Hour")
                        .HasColumnName("hour")
                        .HasColumnType("int");

                    b.Property<int>("HourId")
                        .HasColumnName("hourId")
                        .HasColumnType("int");

                    b.Property<string>("JulianDateCode")
                        .HasColumnName("julianDateCode")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("LotNumber")
                        .IsRequired()
                        .HasColumnName("lotNumber")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Modifiedate")
                        .HasColumnName("modifiedate")
                        .HasColumnType("datetime");

                    b.Property<string>("PistonPartOverride")
                        .HasColumnName("pistonPartOverride")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("ComponentTraceability");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.ComponentTypeReference", b =>
                {
                    b.Property<string>("ComponentId")
                        .HasColumnType("varchar(3)")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("ComponentName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("ComponentId");

                    b.ToTable("ComponentTypeReference");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.ComponentTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Component")
                        .IsRequired()
                        .HasColumnName("component")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("ComponentGroupId")
                        .HasColumnName("componentGroupId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("componentTypes");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.CostCenterSap", b =>
                {
                    b.Property<int>("CostCenter")
                        .HasColumnType("int");

                    b.Property<string>("Dept")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("CostCenter");

                    b.ToTable("CostCenter_SAP");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.CreateHxH", b =>
                {
                    b.Property<int>("HrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hrId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CellSide")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("Deptid")
                        .HasColumnName("deptid")
                        .HasColumnType("int");

                    b.Property<int>("Machineid")
                        .HasColumnName("machineid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnName("shift")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Shiftdate")
                        .HasColumnName("shiftdate")
                        .HasColumnType("datetime");

                    b.HasKey("HrId");

                    b.HasIndex("Deptid", "Machineid")
                        .HasName("NonClusteredIndex-20171108-153906");

                    b.ToTable("CreateHxH");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.CycleTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CycletimeSec")
                        .HasColumnName("cycletime_sec")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("MachineId")
                        .HasColumnName("machineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<string>("Part")
                        .IsRequired()
                        .HasColumnName("part")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("MachineId", "Part")
                        .HasName("NonClusteredIndex-20171108-154323");

                    b.ToTable("CycleTime");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.DashBoardPlannedDown", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datemodified")
                        .HasColumnName("datemodified")
                        .HasColumnType("datetime");

                    b.Property<int>("MachineId")
                        .HasColumnName("machineId")
                        .HasColumnType("int");

                    b.Property<bool>("PlanedDown")
                        .HasColumnName("planedDown")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("DashBoardPlannedDown");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.DefectArea", b =>
                {
                    b.Property<int>("DefectAreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("defectAreaId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DefectArea1")
                        .IsRequired()
                        .HasColumnName("defectArea")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.HasKey("DefectAreaId");

                    b.HasIndex("DefectArea1")
                        .HasName("NonClusteredIndex-20171108-154151");

                    b.ToTable("DefectArea");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.DefectEscalation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlarmLevel")
                        .HasColumnName("alarmLevel")
                        .HasColumnType("int");

                    b.Property<int>("DefectId")
                        .HasColumnName("defectId")
                        .HasColumnType("int");

                    b.Property<int>("DeptId")
                        .HasColumnName("deptId")
                        .HasColumnType("int");

                    b.Property<string>("EscalationMsgId")
                        .HasColumnName("escalationMsgId")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("MachineId")
                        .HasColumnName("machineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<int>("TriggerQty")
                        .HasColumnName("triggerQty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DefectEscalation");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.DefectGroup", b =>
                {
                    b.Property<string>("DefectGroupId")
                        .HasColumnName("defectGroupId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.HasKey("DefectGroupId");

                    b.ToTable("DefectGroup");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.Defects", b =>
                {
                    b.Property<int>("DefectId")
                        .HasColumnName("defectId")
                        .HasColumnType("int");

                    b.Property<int>("DefectAreaId")
                        .HasColumnName("defectAreaId")
                        .HasColumnType("int");

                    b.Property<string>("DefectDescription")
                        .HasColumnName("defectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefectName")
                        .IsRequired()
                        .HasColumnName("defectName")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.HasKey("DefectId");

                    b.HasIndex("DefectAreaId");

                    b.HasIndex("DefectName", "DefectAreaId")
                        .HasName("NonClusteredIndex-20171108-154131");

                    b.ToTable("Defects");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.Department", b =>
                {
                    b.Property<int>("DeptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("deptId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasColumnName("deptName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.HasKey("DeptId");

                    b.HasIndex("DeptName")
                        .HasName("NonClusteredIndex-20171108-154106");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.DepartmentalComments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnName("category")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnName("comments")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime>("Date")
                        .HasColumnName("date")
                        .HasColumnType("datetime");

                    b.Property<string>("Dept")
                        .IsRequired()
                        .HasColumnName("dept")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Manager")
                        .IsRequired()
                        .HasColumnName("manager")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("DepartmentalComments");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.DeptReferences", b =>
                {
                    b.Property<string>("Dept")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("DeptRef")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("DeptReferences");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.DeptReferences2", b =>
                {
                    b.Property<string>("Dept")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("DeptLinkOldDb")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Dept");

                    b.ToTable("DeptReferences2");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.Downtime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Downtimeloss")
                        .HasColumnName("downtimeloss")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("HxhId")
                        .HasColumnName("hxhId")
                        .HasColumnType("int");

                    b.Property<int?>("MachineGroupId")
                        .HasColumnName("machineGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("MachineNumberId")
                        .HasColumnName("machineNumberId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<int>("Reason1Id")
                        .HasColumnName("reason1Id")
                        .HasColumnType("int");

                    b.Property<int?>("Reason2Id")
                        .HasColumnName("reason2Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HxhId", "Reason1Id", "Reason2Id", "MachineGroupId", "MachineNumberId")
                        .HasName("NonClusteredIndex-20171108-154431");

                    b.ToTable("Downtime");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.DowntimeDataList2Copy", b =>
                {
                    b.Property<string>("CellSideFoundry")
                        .HasColumnName("cellSide_foundry")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasColumnName("deptName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("DowntimeId")
                        .HasColumnName("downtimeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Downtimeloss")
                        .HasColumnName("downtimeloss")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Hour")
                        .HasColumnName("hour")
                        .HasColumnType("int");

                    b.Property<int>("HourId")
                        .HasColumnType("int");

                    b.Property<string>("MachineGroup")
                        .HasColumnName("machineGroup")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("MachineGroupId")
                        .HasColumnName("machineGroupId")
                        .HasColumnType("int");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasColumnName("machineName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MachineNumber")
                        .HasColumnName("machineNumber")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("MachineNumberId")
                        .HasColumnName("machineNumberId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<string>("Pn")
                        .HasColumnName("pn")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Reason1")
                        .HasColumnName("reason1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Reason1Id")
                        .HasColumnName("reason1Id")
                        .HasColumnType("int");

                    b.Property<string>("Reason2")
                        .IsRequired()
                        .HasColumnName("reason2")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("Reason2Id")
                        .HasColumnName("reason2Id")
                        .HasColumnType("int");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnName("shift")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Shiftdate")
                        .HasColumnName("shiftdate")
                        .HasColumnType("datetime");

                    b.ToTable("DowntimeDataList2_Copy");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.DowntimeReason1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DeptId")
                        .HasColumnName("deptId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnName("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<string>("Reason1")
                        .HasColumnName("reason1")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DeptId")
                        .HasName("NonClusteredIndex-20171108-154512");

                    b.ToTable("DowntimeReason1");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.DowntimeReason2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DeptId")
                        .HasColumnName("deptId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<string>("Reason2")
                        .IsRequired()
                        .HasColumnName("reason2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DeptId")
                        .HasName("NonClusteredIndex-20171108-154528");

                    b.ToTable("DowntimeReason2");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.DowntimeReason21", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Deptid")
                        .HasColumnName("deptid")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnName("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<int>("Reason1id")
                        .HasColumnName("reason1id")
                        .HasColumnType("int");

                    b.Property<string>("Reason2")
                        .IsRequired()
                        .HasColumnName("reason2")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.HasIndex("Reason1id");

                    b.HasIndex("Deptid", "Reason1id", "Reason2")
                        .HasName("NonClusteredIndex-20171111-132126");

                    b.ToTable("DowntimeReason2.1");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.DowntimeReportRecipient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dept")
                        .IsRequired()
                        .HasColumnName("dept")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("DowntimeReportRecipient");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.DowntimeReportRecipients", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("DeptName")
                        .HasColumnName("deptName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Email");

                    b.ToTable("DowntimeReportRecipients");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.EmailNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dept")
                        .IsRequired()
                        .HasColumnName("dept")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("EmailNotification");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.EnableDisableEscalation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Enable")
                        .HasColumnName("enable")
                        .HasColumnType("bit");

                    b.Property<int>("MachineId")
                        .HasColumnName("machineId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("EnableDisableEscalation");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.EosComments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnName("comment")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Machine")
                        .IsRequired()
                        .HasColumnName("machine")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnName("modifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnName("shift")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<DateTime>("ShiftDate")
                        .HasColumnName("shiftDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Side")
                        .HasColumnName("side")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("EOS_Comments");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.EscalationEmailsNoti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlarmLevel")
                        .HasColumnName("alarmLevel")
                        .HasColumnType("int");

                    b.Property<string>("AlarmType")
                        .IsRequired()
                        .HasColumnName("alarmType")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Dept")
                        .IsRequired()
                        .HasColumnName("dept")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("EscalationEmailsNoti");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.EscalationLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlarmLevel")
                        .HasColumnName("alarmLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnName("date")
                        .HasColumnType("datetime");

                    b.Property<string>("DefectName")
                        .IsRequired()
                        .HasColumnName("defectName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("DeptId")
                        .HasColumnName("deptId")
                        .HasColumnType("int");

                    b.Property<int>("Gross")
                        .HasColumnName("gross")
                        .HasColumnType("int");

                    b.Property<string>("Line")
                        .IsRequired()
                        .HasColumnName("line")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("Mean")
                        .HasColumnName("mean")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<string>("Part")
                        .IsRequired()
                        .HasColumnName("part")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("ScrapQty")
                        .HasColumnName("scrapQty")
                        .HasColumnType("int");

                    b.Property<decimal>("ScrapRate")
                        .HasColumnName("scrapRate")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<int>("Scrapcode")
                        .HasColumnName("scrapcode")
                        .HasColumnType("int");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnName("shift")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("Std")
                        .HasColumnName("std")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("Std1")
                        .HasColumnName("std1")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("Std2")
                        .HasColumnName("std2")
                        .HasColumnType("decimal(18, 5)");

                    b.HasKey("Id");

                    b.ToTable("EscalationLog");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.EscalationLog2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlarmLevel")
                        .HasColumnName("alarmLevel")
                        .HasColumnType("int");

                    b.Property<int>("DefectId")
                        .HasColumnName("defectId")
                        .HasColumnType("int");

                    b.Property<int>("DeptId")
                        .HasColumnName("deptId")
                        .HasColumnType("int");

                    b.Property<int>("MachineId")
                        .HasColumnName("machineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<string>("Page")
                        .IsRequired()
                        .HasColumnName("page")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("ScrapQty")
                        .HasColumnName("scrapQty")
                        .HasColumnType("int");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnName("shift")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("ShiftDate")
                        .HasColumnName("shiftDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("EscalationLog2");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.EscalationMsg", b =>
                {
                    b.Property<string>("EscalationMsgTitle")
                        .HasColumnName("escalationMsgTitle")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("HtmlEscalationMsg")
                        .IsRequired()
                        .HasColumnName("htmlEscalationMsg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnName("type")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("EscalationMsgTitle");

                    b.ToTable("EscalationMsg");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.EscalationReactions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EscalationId")
                        .HasColumnName("escalationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ReactionComment")
                        .IsRequired()
                        .HasColumnName("reactionComment")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("EscalationReactions");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.FinVerification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HourId")
                        .HasColumnName("hourId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnName("modifiedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("Value")
                        .HasColumnName("value")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("FinVerification");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.FinanceDailyInput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssyUnitsMtd")
                        .HasColumnName("assy_units_mtd")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnName("comments")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime>("Date")
                        .HasColumnName("date")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("DlHoursEarnedMtd")
                        .HasColumnName("DL_hoursEarned_mtd")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal?>("DlHoursWorkedMtd")
                        .HasColumnName("DL_hoursWorked_mtd")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<int>("FoundryUnitsMtd")
                        .HasColumnName("foundry_units_mtd")
                        .HasColumnType("int");

                    b.Property<int>("MachUnitsMtd")
                        .HasColumnName("mach_units_mtd")
                        .HasColumnType("int");

                    b.Property<decimal>("MroDollarsDailyAvg")
                        .HasColumnName("mroDollars_dailyAvg")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("MroDollarsMtd")
                        .HasColumnName("mroDollars_mtd")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("PisonScrapDollarsDailyAvg")
                        .HasColumnName("pisonScrapDollars_dailyAvg")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("PistonScrapDollarsMtd")
                        .HasColumnName("pistonScrapDollars_mtd")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<DateTime>("Stamp")
                        .HasColumnName("stamp")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Finance_DailyInput");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.FinanceDailyKpi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("ActualCostAbsorption")
                        .HasColumnName("actual_cost_absorption")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Comment")
                        .HasColumnName("comment")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<decimal>("DailyAvgCost")
                        .HasColumnName("daily_avg_cost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("Date")
                        .HasColumnName("date")
                        .HasColumnType("datetime");

                    b.Property<decimal>("MtdCost")
                        .HasColumnName("mtd_cost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("ReachPercentAbsorption")
                        .HasColumnName("reach_percent_absorption")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<DateTime?>("Stamp")
                        .HasColumnName("stamp")
                        .HasColumnType("datetime");

                    b.Property<decimal>("TargetCostAbsorption")
                        .HasColumnName("target_cost_absorption")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnName("type")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("UnitsProduced")
                        .HasColumnName("unitsProduced")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Finance_DailyKPI");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.FinanceDeptFcst", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datetime")
                        .HasColumnName("datetime")
                        .HasColumnType("datetime");

                    b.Property<string>("Dept")
                        .IsRequired()
                        .HasColumnName("dept")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("MonthNum")
                        .HasColumnName("monthNum")
                        .HasColumnType("int");

                    b.Property<decimal>("OaeFcst")
                        .HasColumnName("oaeFcst")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("TotalUnitFcst")
                        .HasColumnName("totalUnitFcst")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnName("year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Finance_DeptFcst");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.FinanceFigures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Ebitda1000")
                        .HasColumnName("ebitda_1000")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("MonthNum")
                        .HasColumnName("monthNum")
                        .HasColumnType("int");

                    b.Property<decimal>("Sales1000")
                        .HasColumnName("sales_1000")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("Stamp")
                        .HasColumnName("stamp")
                        .HasColumnType("datetime");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnName("type")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Year")
                        .HasColumnName("year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Finance_Figures");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.FinanceFlashProjections", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CapitalFcst")
                        .HasColumnName("capitalFcst")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Ebitda1000")
                        .HasColumnName("ebitda_1000")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("MonthNum")
                        .HasColumnName("monthNum")
                        .HasColumnType("int");

                    b.Property<decimal>("MroFcstCost")
                        .HasColumnName("mroFcst_cost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("PistonScrapFcstCost")
                        .HasColumnName("pistonScrapFcst_cost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Sales1000")
                        .HasColumnName("sales_1000")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("Stamp")
                        .HasColumnName("stamp")
                        .HasColumnType("datetime");

                    b.Property<int>("Year")
                        .HasColumnName("year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Finance_FlashProjections");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.FinanceLaborHours", b =>
                {
                    b.Property<int>("Id1")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateOut")
                        .HasColumnType("datetime");

                    b.Property<int?>("Dept")
                        .HasColumnType("int");

                    b.Property<decimal?>("DoubleTime")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<int?>("Glaccount")
                        .HasColumnName("GLAccount")
                        .HasColumnType("int");

                    b.Property<string>("Id")
                        .HasColumnName("ID_")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal?>("Orientation")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal?>("Ot7d")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal?>("OtHalfTime")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal?>("Overtime")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal?>("Regular")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<int?>("Shift")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("TimeIn")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("TimeOut")
                        .HasColumnType("time");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UploadTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id1");

                    b.ToTable("Finance_LaborHours");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.FinancePpmh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Actual")
                        .HasColumnName("actual")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Dept")
                        .IsRequired()
                        .HasColumnName("dept")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("Dle")
                        .HasColumnName("DLE")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Month")
                        .IsRequired()
                        .HasColumnName("month")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Stamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("stamp")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("Target")
                        .HasColumnName("target")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("Finance_PPMH");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.FoundryCastingParamAccess", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Access")
                        .IsRequired()
                        .HasColumnName("access")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("UserName");

                    b.ToTable("FoundryCastingParamAccess");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.FoundryCellCounter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("EndCount")
                        .HasColumnName("endCount")
                        .HasColumnType("bigint");

                    b.Property<int>("HourId")
                        .HasColumnName("hourId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Stamp")
                        .HasColumnName("stamp")
                        .HasColumnType("datetime");

                    b.Property<long>("StartCount")
                        .HasColumnName("startCount")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("FoundryCellCounter");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.FoundryParamAttachments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnName("contentType")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnName("data")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnName("fileName")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("FndryParamId")
                        .HasColumnName("fndryParamId")
                        .HasColumnType("int");

                    b.Property<string>("ImageType")
                        .IsRequired()
                        .HasColumnName("imageType")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedData")
                        .HasColumnName("modifiedData")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("FndryParamId");

                    b.ToTable("FoundryParamAttachments");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.FoundryParamAttachmentsTemp", b =>
                {
                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnName("contentType")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnName("data")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnName("fileName")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("FndryParamId")
                        .HasColumnName("fndryParamId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageType")
                        .IsRequired()
                        .HasColumnName("imageType")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedData")
                        .HasColumnName("modifiedData")
                        .HasColumnType("datetime");

                    b.ToTable("FoundryParamAttachments_temp");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.FoundryParamAttachmentsTemp2", b =>
                {
                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnName("contentType")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnName("data")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnName("fileName")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("FndryParamId")
                        .HasColumnName("fndryParamId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageType")
                        .IsRequired()
                        .HasColumnName("imageType")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedData")
                        .HasColumnName("modifiedData")
                        .HasColumnType("datetime");

                    b.ToTable("FoundryParamAttachments_temp2");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.FoundryParamCharacteristics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Characteristics")
                        .IsRequired()
                        .HasColumnName("characteristics")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("GroupId")
                        .HasColumnName("groupId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("FoundryParamCharacteristics");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.FoundryParamGroups", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnName("groupName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("FoundryParamGroups");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.FoundryParamSheetIds", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasColumnName("customer")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FmsbPart")
                        .IsRequired()
                        .HasColumnName("fmsbPart")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<int>("RevisionNumber")
                        .HasColumnName("revisionNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FoundryParamSheetIds");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.FoundryParamSheets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CharacteristicId")
                        .HasColumnName("characteristicId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .HasColumnName("notes")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int>("ParamId")
                        .HasColumnName("paramId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnName("value")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("CharacteristicId");

                    b.HasIndex("ParamId");

                    b.ToTable("FoundryParamSheets");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.FurnaceRebuild", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClockNum")
                        .HasColumnName("clockNum")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnName("comment")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime>("Date")
                        .HasColumnName("date")
                        .HasColumnType("datetime");

                    b.Property<int>("FurnaceShellid")
                        .HasColumnName("furnaceShellid")
                        .HasColumnType("int");

                    b.Property<bool>("IsFurnaceReady")
                        .HasColumnName("isFurnaceReady")
                        .HasColumnType("bit");

                    b.Property<string>("ThingsToLookFor")
                        .HasColumnName("thingsToLookFor")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnName("timeStamp")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("FurnaceShellid");

                    b.ToTable("FurnaceRebuild");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.FurnaceReplacement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClockNum")
                        .HasColumnName("clockNum")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnName("comments")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int>("FurnaceShellId")
                        .HasColumnName("furnaceShellId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPreHeated")
                        .HasColumnName("isPreHeated")
                        .HasColumnType("bit");

                    b.Property<int>("MachineId")
                        .HasColumnName("machineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnName("modifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnName("shift")
                        .HasColumnType("varchar(2)")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<DateTime>("ShiftDate")
                        .HasColumnName("shiftDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Side")
                        .IsRequired()
                        .HasColumnName("side")
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .HasColumnName("status")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("UsedDays")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("usedDays")
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Id");

                    b.HasIndex("FurnaceShellId");

                    b.HasIndex("MachineId");

                    b.ToTable("FurnaceReplacement");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.FurnaceReplacementExt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClockNum")
                        .HasColumnName("clockNum")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnName("comments")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime>("DateRemoved")
                        .HasColumnName("dateRemoved")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateReplaced")
                        .HasColumnName("dateReplaced")
                        .HasColumnType("datetime");

                    b.Property<int>("FurnaceReplacementId")
                        .HasColumnName("furnaceReplacementId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPreHeated")
                        .HasColumnName("isPreHeated")
                        .HasColumnType("bit");

                    b.Property<int>("MachineId")
                        .HasColumnName("machineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnName("shift")
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("Side")
                        .IsRequired()
                        .HasColumnName("side")
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("FurnaceReplacementExt");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.FurnaceShellNumbers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnName("modifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("MosToReplace")
                        .HasColumnName("mosToReplace")
                        .HasColumnType("int");

                    b.Property<string>("ShellNumber")
                        .IsRequired()
                        .HasColumnName("shellNumber")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("FurnaceShellNumbers");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.HeatMapLoginRec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Clock")
                        .HasColumnName("clock")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnName("date")
                        .HasColumnType("datetime");

                    b.Property<string>("DefectName")
                        .IsRequired()
                        .HasColumnName("defectName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<string>("Part")
                        .IsRequired()
                        .HasColumnName("part")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnName("shift")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("HeatMapLoginRec");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.HeatMapValues", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HeatMapLoginId")
                        .HasColumnName("heatMapLoginId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnName("modifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Radius")
                        .HasColumnName("radius")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnName("value")
                        .HasColumnType("int");

                    b.Property<int>("XValue")
                        .HasColumnName("x_value")
                        .HasColumnType("int");

                    b.Property<int>("YValue")
                        .HasColumnName("y_value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HeatMapValues");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.HourByHour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CavitiesFoundry")
                        .HasColumnName("cavities_foundry")
                        .HasColumnType("int");

                    b.Property<string>("CellSideFoundry")
                        .HasColumnName("cellSide_foundry")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("GrossWithWarmers")
                        .HasColumnName("grossWithWarmers")
                        .HasColumnType("int");

                    b.Property<int>("Hour")
                        .HasColumnName("hour")
                        .HasColumnType("int");

                    b.Property<int>("HourId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<string>("Pn")
                        .HasColumnName("pn")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Production")
                        .HasColumnName("production")
                        .HasColumnType("int");

                    b.Property<int?>("RunningTotal")
                        .HasColumnName("runningTotal")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HourId");

                    b.HasIndex("Hour", "Pn", "HourId")
                        .HasName("NonClusteredIndex-20171108-154610");

                    b.ToTable("HourByHour");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.HourByHourEscalationActions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnName("action")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("Duedate")
                        .HasColumnName("duedate")
                        .HasColumnType("datetime");

                    b.Property<int>("Hour")
                        .HasColumnName("hour")
                        .HasColumnType("int");

                    b.Property<int>("HourId")
                        .HasColumnName("hourId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<string>("Owner")
                        .HasColumnName("owner")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("HourByHourEscalationActions");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.HourReference", b =>
                {
                    b.Property<int>("HrNumber")
                        .HasColumnType("int");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<TimeSpan>("Time")
                        .HasColumnName("time")
                        .HasColumnType("time");

                    b.ToTable("HourReference");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.HxhOpsClockNum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Clock")
                        .HasColumnName("clock")
                        .HasColumnType("int");

                    b.Property<int>("Hxhid")
                        .HasColumnName("hxhid")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Hxhid");

                    b.ToTable("HxhOpsClockNum");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.Inspectors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Clock")
                        .HasColumnName("clock")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<int>("Prodid")
                        .HasColumnName("prodid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Inspectors");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.LogisticsCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnName("comment")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasColumnName("customer")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("LogisticsId")
                        .HasColumnName("logisticsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnName("modifiedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("logistics_customer");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.LogisticsDollars", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Actual")
                        .HasColumnName("actual")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnName("category")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("LogisticsId")
                        .HasColumnName("logisticsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifieDate")
                        .HasColumnName("modifieDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Target")
                        .HasColumnName("target")
                        .HasColumnType("decimal(18, 5)");

                    b.HasKey("Id");

                    b.ToTable("logistics_dollars");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.LogisticsInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AvgDays")
                        .HasColumnName("avg_days")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnName("category")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Comments")
                        .HasColumnName("comments")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int>("LogisticsId")
                        .HasColumnName("logisticsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnName("modifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Qty")
                        .HasColumnName("qty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("logistics_inventory");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.LogisticsMm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnName("date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("modifiedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("logistics_mm");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.LogisticsPartInv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("DaysOnHand")
                        .HasColumnName("daysOnHand")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<int>("LogisticsId")
                        .HasColumnName("logisticsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnName("modifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("PartId")
                        .HasColumnName("partId")
                        .HasColumnType("int");

                    b.Property<int?>("Qty")
                        .HasColumnName("qty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("logistics_part_inv");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.LogisticsParts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Part")
                        .IsRequired()
                        .HasColumnName("part")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Program")
                        .IsRequired()
                        .HasColumnName("program")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Sort")
                        .HasColumnName("sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("logisticsParts");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.LogisticsScrap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CostCenter")
                        .HasColumnName("costCenter")
                        .HasColumnType("int");

                    b.Property<decimal?>("InventoryScrapCost")
                        .HasColumnName("inventoryScrapCost")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<int?>("InventoryScrapQty")
                        .HasColumnName("inventoryScrapQty")
                        .HasColumnType("int");

                    b.Property<int>("LogisticsId")
                        .HasColumnName("logisticsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("modifiedDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("ProcessScrapCost")
                        .HasColumnName("processScrapCost")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<int?>("ProcessScrapQty")
                        .HasColumnName("processScrapQty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("logistics_scrap");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.MachLineLoadLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BCode")
                        .IsRequired()
                        .HasColumnName("bCode")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("Clorindo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("clorindo")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Gsa")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("gsa")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<int>("ScrapId")
                        .HasColumnName("scrapId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MachLineLoadLog");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.MachToolBreakage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HourId")
                        .HasColumnName("hourId")
                        .HasColumnType("int");

                    b.Property<bool>("IsGood")
                        .HasColumnName("isGood")
                        .HasColumnType("bit");

                    b.Property<string>("MachineNumber")
                        .IsRequired()
                        .HasColumnName("machineNumber")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnName("reason")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Stamp")
                        .HasColumnName("stamp")
                        .HasColumnType("datetime");

                    b.Property<string>("SupervisorClock")
                        .IsRequired()
                        .HasColumnName("supervisorClock")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Mach_ToolBreakage");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.MachToolBreakageEmailRecipients", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Email")
                        .HasName("PK_ToolBreakageEmailsRecipients");

                    b.ToTable("Mach_ToolBreakageEmailRecipients");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.MachineCycleTimeMasterEntries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("CycleTime")
                        .HasColumnName("cycleTime")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<int>("HourId")
                        .HasColumnName("hourId")
                        .HasColumnType("int");

                    b.Property<int>("MachineCycleTimeId")
                        .HasColumnName("machineCycleTimeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Stamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("stamp")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("MachineCycleTimeMasterEntries");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.MachineCycleTimeMasterRefs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cycle")
                        .HasColumnName("cycle")
                        .HasColumnType("int");

                    b.Property<int>("MachineId")
                        .HasColumnName("machineId")
                        .HasColumnType("int");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasColumnName("machineName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Stamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("stamp")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Target")
                        .HasColumnName("target")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MachineCycleTimeMasterRefs");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.MachineGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsActive")
                        .HasColumnName("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineGroup1")
                        .IsRequired()
                        .HasColumnName("machineGroup")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("MachineId")
                        .HasColumnName("machineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifiedate")
                        .HasColumnName("modifiedate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("MachineGroup");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.MachineGroupNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsActive")
                        .HasColumnName("isActive")
                        .HasColumnType("bit");

                    b.Property<int>("MachineGroupId")
                        .HasColumnName("machineGroupId")
                        .HasColumnType("int");

                    b.Property<string>("MachineNumber")
                        .HasColumnName("machineNumber")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("MachineGroupNumber");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.MachineLookup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MainMachineId")
                        .HasColumnName("mainMachineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<int>("RefMachineId")
                        .HasColumnName("refMachineId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MachineLookup");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.Machines", b =>
                {
                    b.Property<int>("MachineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("machineId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DeptId")
                        .HasColumnName("deptId")
                        .HasColumnType("int");

                    b.Property<int?>("LineNumber")
                        .HasColumnName("lineNumber")
                        .HasColumnType("int");

                    b.Property<string>("MachineDesc")
                        .HasColumnName("machineDesc")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("MachineMapper")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasColumnName("machineName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.HasKey("MachineId");

                    b.HasIndex("DeptId");

                    b.HasIndex("MachineName", "DeptId")
                        .HasName("NonClusteredIndex-20171108-153956");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.MachiningDieNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DieNumber")
                        .HasColumnName("dieNumber")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Hour")
                        .HasColumnName("hour")
                        .HasColumnType("int");

                    b.Property<int>("HourId")
                        .HasColumnName("hourId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Stamp")
                        .HasColumnName("stamp")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("MachiningDieNumber");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.MmComments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnName("action")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime>("Date")
                        .HasColumnName("date")
                        .HasColumnType("datetime");

                    b.Property<string>("Dept")
                        .IsRequired()
                        .HasColumnName("dept")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Issue")
                        .IsRequired()
                        .HasColumnName("issue")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnName("timeStamp")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("MM_Comments");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.MonitorScale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Height")
                        .HasColumnName("height")
                        .HasColumnType("int");

                    b.Property<int>("MachId")
                        .HasColumnName("machId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<int>("Width")
                        .HasColumnName("width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MonitorScale");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.MorningMeetingCom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnName("action")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime>("Date")
                        .HasColumnName("date")
                        .HasColumnType("datetime");

                    b.Property<string>("Issue")
                        .HasColumnName("issue")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnName("timeStamp")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("MorningMeetingCom");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.OaeBootStrapClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MachineId")
                        .HasColumnName("machineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Percentage")
                        .HasColumnName("percentage")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Stat")
                        .IsRequired()
                        .HasColumnName("stat")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("OaeBootStrapClass");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.OaeEmailRecipients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlarmLevel")
                        .HasColumnName("alarmLevel")
                        .HasColumnType("int");

                    b.Property<int>("DeptId")
                        .HasColumnName("deptId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnName("emailAddress")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnName("shift")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("OaeEmailRecipients");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.OaeEscalationActions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnName("action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("OaeLogId")
                        .HasColumnName("oaeLogId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OaeEscalationActions");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.OaeEscalationLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlarmLevel")
                        .HasColumnName("alarmLevel")
                        .HasColumnType("int");

                    b.Property<int>("Hour")
                        .HasColumnName("hour")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Occurence")
                        .HasColumnName("occurence")
                        .HasColumnType("int");

                    b.Property<int>("ProdId")
                        .HasColumnName("prodId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OaeEscalationLog");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.OaeEscalationSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlarmLevel")
                        .HasColumnName("alarmLevel")
                        .HasColumnType("int");

                    b.Property<int>("MachineId")
                        .HasColumnName("machineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<int>("RedStatusCount")
                        .HasColumnName("redStatusCount")
                        .HasColumnType("int");

                    b.Property<int>("YellowStatusCount")
                        .HasColumnName("yellowStatusCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OaeEscalationSetting");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.OaeMachineOwners", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MachineId")
                        .HasColumnName("machineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifiedate")
                        .HasColumnName("modifiedate")
                        .HasColumnType("datetime");

                    b.Property<string>("Owners")
                        .HasColumnName("owners")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("OaeMachineOwners");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.ParallelMachinesMach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Divisor")
                        .HasColumnName("divisor")
                        .HasColumnType("int");

                    b.Property<int>("MachineId")
                        .HasColumnName("machineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("ParallelMachines_Mach");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.PartRefs", b =>
                {
                    b.Property<string>("CorrectPart")
                        .HasColumnName("correctPart")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Part")
                        .HasColumnName("part")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.ToTable("PartRefs");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.Prod", b =>
                {
                    b.Property<int>("ProdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("prodId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Approved")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("approved")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Cell")
                        .HasColumnName("cell")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("ClockNumber")
                        .HasColumnName("clockNumber")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnName("comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeptId")
                        .HasColumnName("deptId")
                        .HasColumnType("int");

                    b.Property<string>("Die")
                        .HasColumnName("die")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Gross")
                        .HasColumnName("gross")
                        .HasColumnType("int");

                    b.Property<int>("MachineId")
                        .HasColumnName("machineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<string>("Part")
                        .IsRequired()
                        .HasColumnName("part")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Runtime")
                        .HasColumnName("runtime")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnName("shift")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("ShiftDate")
                        .HasColumnName("shiftDate")
                        .HasColumnType("datetime");

                    b.HasKey("ProdId");

                    b.HasIndex("DeptId");

                    b.HasIndex("MachineId");

                    b.HasIndex("Shift");

                    b.ToTable("Prod");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.ProdScrap", b =>
                {
                    b.Property<int>("ProdScrapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("prodScrapId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CellNumber")
                        .HasColumnName("cellNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Comments")
                        .HasColumnName("comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DefectAreaId")
                        .HasColumnName("defectAreaId")
                        .HasColumnType("int");

                    b.Property<int>("DefectId")
                        .HasColumnName("defectId")
                        .HasColumnType("int");

                    b.Property<int>("DeptId")
                        .HasColumnName("deptId")
                        .HasColumnType("int");

                    b.Property<string>("DieNumber")
                        .HasColumnName("dieNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("MachineId")
                        .HasColumnName("machineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<string>("Part")
                        .IsRequired()
                        .HasColumnName("part")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProdId")
                        .HasColumnName("prodId")
                        .HasColumnType("int");

                    b.Property<int?>("Qty")
                        .HasColumnName("qty")
                        .HasColumnType("int");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnName("shift")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("ShiftDate")
                        .HasColumnName("shiftDate")
                        .HasColumnType("datetime");

                    b.HasKey("ProdScrapId");

                    b.HasIndex("DefectAreaId");

                    b.HasIndex("DefectId");

                    b.HasIndex("DeptId");

                    b.HasIndex("MachineId");

                    b.HasIndex("Shift");

                    b.ToTable("ProdScrap");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.ProductionIssuesActions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Actions")
                        .HasColumnName("actions")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime>("Date")
                        .HasColumnName("date")
                        .HasColumnType("datetime");

                    b.Property<int>("DeptId")
                        .HasColumnName("deptId")
                        .HasColumnType("int");

                    b.Property<string>("Issue")
                        .IsRequired()
                        .HasColumnName("issue")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int>("Machineid")
                        .HasColumnName("machineid")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnName("shift")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("ProductionIssuesActions");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.ProgramRefs", b =>
                {
                    b.Property<string>("Part")
                        .HasColumnName("part")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Program")
                        .HasColumnName("program")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Part");

                    b.ToTable("ProgramRefs");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.Pso", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("PSO");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.RemoveGradeReference", b =>
                {
                    b.Property<string>("Partwithsuffix")
                        .HasColumnName("partwithsuffix")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Part")
                        .HasColumnName("part")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Partwithsuffix");

                    b.ToTable("RemoveGradeReference");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.RodReclaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClockNum")
                        .IsRequired()
                        .HasColumnName("clockNum")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Date")
                        .HasColumnName("date")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<string>("PartNum")
                        .IsRequired()
                        .HasColumnName("partNum")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("QtyToReclaim")
                        .HasColumnName("qtyToReclaim")
                        .HasColumnType("int");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnName("shift")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("RodReclaim");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.RouteMachineId", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DeptId")
                        .HasColumnName("deptId")
                        .HasColumnType("int");

                    b.Property<int?>("MachineId")
                        .HasColumnName("machineId")
                        .HasColumnType("int");

                    b.Property<int?>("MachineIdRoute")
                        .HasColumnName("machineIdRoute")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RouteMachineId");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.SapCompParts", b =>
                {
                    b.Property<string>("SapCompPart")
                        .HasColumnName("sapCompPart")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("SapCompPart");

                    b.ToTable("SapCompParts");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.SapCompPartsBom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FmPart")
                        .IsRequired()
                        .HasColumnName("fm_part")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("P1a")
                        .HasColumnName("p1a")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("SadDesc")
                        .IsRequired()
                        .HasColumnName("sad_desc")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SapPart")
                        .IsRequired()
                        .HasColumnName("sap_part")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("SapCompPartsBom");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.SapCostCenter", b =>
                {
                    b.Property<string>("Dept")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("CostCenter")
                        .HasColumnType("int");

                    b.HasKey("Dept");

                    b.ToTable("SapCostCenter");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.ScrapHxh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasColumnName("comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Defectid")
                        .HasColumnName("defectid")
                        .HasColumnType("int");

                    b.Property<int>("HourNum")
                        .HasColumnName("hourNum")
                        .HasColumnType("int");

                    b.Property<int>("Hxhid")
                        .HasColumnName("hxhid")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<int>("Qty")
                        .HasColumnName("qty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Hxhid", "Defectid", "HourNum")
                        .HasName("NonClusteredIndex-20171108-153825");

                    b.ToTable("ScrapHxh");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.ScrapRatesPartsFoundryCopy", b =>
                {
                    b.Property<string>("DeptName")
                        .HasColumnName("deptName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Gross")
                        .HasColumnType("int");

                    b.Property<string>("Pn")
                        .HasColumnName("pn")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Qty")
                        .HasColumnName("qty")
                        .HasColumnType("int");

                    b.Property<decimal?>("ScrapRate")
                        .HasColumnName("scrapRate")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("Shift")
                        .HasColumnName("shift")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Shiftdate")
                        .HasColumnName("shiftdate")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("ScrapRatesParts_Foundry_copy");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.ScrapRatesbyDefectFoundryCopy", b =>
                {
                    b.Property<string>("DefectName")
                        .HasColumnName("defectName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("DeptName")
                        .HasColumnName("deptName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Gross")
                        .HasColumnType("int");

                    b.Property<int?>("Qty")
                        .HasColumnName("qty")
                        .HasColumnType("int");

                    b.Property<decimal?>("ScrapRate")
                        .HasColumnName("scrapRate")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("Shift")
                        .HasColumnName("shift")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Shiftdate")
                        .HasColumnName("shiftdate")
                        .HasColumnType("datetime");

                    b.ToTable("ScrapRatesbyDefect_Foundry_copy");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.ScrapView", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DefectAreaId")
                        .HasColumnName("defectAreaId")
                        .HasColumnType("int");

                    b.Property<int>("DefectId")
                        .HasColumnName("defectId")
                        .HasColumnType("int");

                    b.Property<int>("DeptId")
                        .HasColumnName("deptId")
                        .HasColumnType("int");

                    b.Property<int>("MachineId")
                        .HasColumnName("machineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<string>("ViewName")
                        .HasColumnName("viewName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("DefectAreaId");

                    b.HasIndex("DefectId");

                    b.HasIndex("MachineId");

                    b.HasIndex("ViewName");

                    b.HasIndex("DeptId", "DefectAreaId", "DefectId", "MachineId", "ViewName")
                        .HasName("NonClusteredIndex-20171108-154704");

                    b.ToTable("ScrapView");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.ScrapViewName", b =>
                {
                    b.Property<string>("ScrapViewName1")
                        .HasColumnName("ScrapViewName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.HasKey("ScrapViewName1");

                    b.ToTable("ScrapViewName");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.Shift", b =>
                {
                    b.Property<string>("Shift1")
                        .HasColumnName("Shift")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Shift1");

                    b.ToTable("Shift");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.SkirtCoatScreenLife", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTimeScanned")
                        .HasColumnName("dateTimeScanned")
                        .HasColumnType("datetime");

                    b.Property<int?>("EndCount")
                        .HasColumnName("endCount")
                        .HasColumnType("int");

                    b.Property<int>("HourId")
                        .HasColumnName("hourId")
                        .HasColumnType("int");

                    b.Property<int>("HourNum")
                        .HasColumnName("hourNum")
                        .HasColumnType("int");

                    b.Property<string>("JulianDate")
                        .IsRequired()
                        .HasColumnName("julianDate")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("MeshColor")
                        .IsRequired()
                        .HasColumnName("meshColor")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("MeshNumber")
                        .IsRequired()
                        .HasColumnName("meshNumber")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("RemovalReason")
                        .HasColumnName("removalReason")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("RevDate")
                        .IsRequired()
                        .HasColumnName("revDate")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("ScrapReason")
                        .HasColumnName("scrapReason")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ScreenPartNum")
                        .IsRequired()
                        .HasColumnName("screenPartNum")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int?>("StartCount")
                        .HasColumnName("startCount")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnName("status")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("SkirtCoatScreenLife");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.SwotNetTargetEscalation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailRecipients")
                        .IsRequired()
                        .HasColumnName("emailRecipients")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnName("message")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime>("Stamp")
                        .HasColumnName("stamp")
                        .HasColumnType("datetime");

                    b.Property<int>("SwotTargetId")
                        .HasColumnName("swotTargetId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnName("type")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("SWOT_NetTargetEscalation");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.SwotProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dept")
                        .IsRequired()
                        .HasColumnName("dept")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Lines")
                        .IsRequired()
                        .HasColumnName("lines")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Profile")
                        .IsRequired()
                        .HasColumnName("profile")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Stamp")
                        .HasColumnName("stamp")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("SWOT_Profile");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.SwotTargets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AfScrapTarget")
                        .HasColumnName("afScrapTarget")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<int?>("ComponentCount")
                        .HasColumnName("component_count")
                        .HasColumnType("int");

                    b.Property<decimal>("FoundryScrapTarget")
                        .HasColumnName("foundryScrapTarget")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<bool?>("IsPriority")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isPriority")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("MachineId")
                        .HasColumnName("machineId")
                        .HasColumnType("int");

                    b.Property<decimal>("MachineScrapTarget")
                        .HasColumnName("machineScrapTarget")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("OaeTarget")
                        .HasColumnName("oaeTarget")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<DateTime>("Stamp")
                        .HasColumnName("stamp")
                        .HasColumnType("datetime");

                    b.Property<int>("TargetPartsPerHour")
                        .HasColumnName("targetPartsPerHour")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SWOT_Targets");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.TemporaryLevelGetterOae", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlarmLevel")
                        .HasColumnName("alarmLevel")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ProdId")
                        .HasColumnName("prodId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TemporaryLevelGetterOae");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.Users", b =>
                {
                    b.Property<string>("Fmid")
                        .HasColumnName("fmid")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Deptid")
                        .HasColumnName("deptid")
                        .HasColumnType("int");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasColumnName("fname")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnName("lname")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Modifieddate")
                        .HasColumnName("modifieddate")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnName("shift")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Fmid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2._24hours", b =>
                {
                    b.Property<int?>("Hour")
                        .HasColumnName("hour")
                        .HasColumnType("int");

                    b.Property<int?>("Shift")
                        .HasColumnName("shift")
                        .HasColumnType("int");

                    b.ToTable("24Hours");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.zTestOnly", b =>
                {
                    b.Property<int>("zTestOnlyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("zTestOnlyId");

                    b.ToTable("zTestOnly");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.Defects", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.Fmsb2.DefectArea", "DefectArea")
                        .WithMany("Defects")
                        .HasForeignKey("DefectAreaId")
                        .HasConstraintName("FK_Defects_DefectArea")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.DowntimeReason1", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.Fmsb2.Department", "Dept")
                        .WithMany("DowntimeReason1")
                        .HasForeignKey("DeptId")
                        .HasConstraintName("FK_DowntimeReason1_Department")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.DowntimeReason2", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.Fmsb2.Department", "Dept")
                        .WithMany("DowntimeReason2")
                        .HasForeignKey("DeptId")
                        .HasConstraintName("FK_DowntimeReason2_Department")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.DowntimeReason21", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.Fmsb2.Department", "Dept")
                        .WithMany("DowntimeReason21")
                        .HasForeignKey("Deptid")
                        .HasConstraintName("FK_DowntimeReason2.1_Department")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.Fmsb2.DowntimeReason1", "Reason1")
                        .WithMany("DowntimeReason21")
                        .HasForeignKey("Reason1id")
                        .HasConstraintName("FK_DowntimeReason2.1_DowntimeReason1")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.FoundryParamAttachments", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.Fmsb2.FoundryParamSheetIds", "FndryParam")
                        .WithMany("FoundryParamAttachments")
                        .HasForeignKey("FndryParamId")
                        .HasConstraintName("FK_FoundryParamAttachments_FoundryParamSheetIds")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.FoundryParamCharacteristics", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.Fmsb2.FoundryParamGroups", "Group")
                        .WithMany("FoundryParamCharacteristics")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_FoundryParamCharacteristics_FoundryParamGroups")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.FoundryParamSheets", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.Fmsb2.FoundryParamCharacteristics", "Characteristic")
                        .WithMany("FoundryParamSheets")
                        .HasForeignKey("CharacteristicId")
                        .HasConstraintName("FK_FoundryParamSheets_FoundryParamCharacteristics")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.Fmsb2.FoundryParamSheetIds", "Param")
                        .WithMany("FoundryParamSheets")
                        .HasForeignKey("ParamId")
                        .HasConstraintName("FK_FoundryParamSheets_FoundryParamSheetIds")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.FurnaceRebuild", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.Fmsb2.FurnaceShellNumbers", "FurnaceShell")
                        .WithMany("FurnaceRebuild")
                        .HasForeignKey("FurnaceShellid")
                        .HasConstraintName("FK_FurnaceRebuild_FurnaceShellNumbers")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.FurnaceReplacement", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.Fmsb2.FurnaceShellNumbers", "FurnaceShell")
                        .WithMany("FurnaceReplacement")
                        .HasForeignKey("FurnaceShellId")
                        .HasConstraintName("FK_FurnaceReplacement_FurnaceShellNumbers")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.Fmsb2.Machines", "Machine")
                        .WithMany("FurnaceReplacement")
                        .HasForeignKey("MachineId")
                        .HasConstraintName("FK_FurnaceReplacement_Machines")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.HourByHour", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.Fmsb2.CreateHxH", "HourNavigation")
                        .WithMany("HourByHour")
                        .HasForeignKey("HourId")
                        .HasConstraintName("FK_HourByHour_CreateHxH")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.HxhOpsClockNum", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.Fmsb2.CreateHxH", "Hxh")
                        .WithMany("HxhOpsClockNum")
                        .HasForeignKey("Hxhid")
                        .HasConstraintName("FK_HxhOpsClockNum_CreateHxH")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.Machines", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.Fmsb2.Department", "Dept")
                        .WithMany("Machines")
                        .HasForeignKey("DeptId")
                        .HasConstraintName("FK_Machines_Department")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.Prod", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.Fmsb2.Department", "Dept")
                        .WithMany("Prod")
                        .HasForeignKey("DeptId")
                        .HasConstraintName("FK_Prod_Department")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.Fmsb2.Machines", "Machine")
                        .WithMany("Prod")
                        .HasForeignKey("MachineId")
                        .HasConstraintName("FK_Prod_Machines")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.Fmsb2.Shift", "ShiftNavigation")
                        .WithMany("Prod")
                        .HasForeignKey("Shift")
                        .HasConstraintName("FK_Prod_Shift")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.ProdScrap", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.Fmsb2.DefectArea", "DefectArea")
                        .WithMany("ProdScrap")
                        .HasForeignKey("DefectAreaId")
                        .HasConstraintName("FK_ProdScrap_DefectArea")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.Fmsb2.Defects", "Defect")
                        .WithMany("ProdScrap")
                        .HasForeignKey("DefectId")
                        .HasConstraintName("FK_ProdScrap_Defects")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.Fmsb2.Department", "Dept")
                        .WithMany("ProdScrap")
                        .HasForeignKey("DeptId")
                        .HasConstraintName("FK_ProdScrap_Department")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.Fmsb2.Machines", "Machine")
                        .WithMany("ProdScrap")
                        .HasForeignKey("MachineId")
                        .HasConstraintName("FK_ProdScrap_Machines")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.Fmsb2.Shift", "ShiftNavigation")
                        .WithMany("ProdScrap")
                        .HasForeignKey("Shift")
                        .HasConstraintName("FK_ProdScrap_Shift")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.ScrapHxh", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.Fmsb2.CreateHxH", "Hxh")
                        .WithMany("ScrapHxh")
                        .HasForeignKey("Hxhid")
                        .HasConstraintName("FK_ScrapHxh_CreateHxH")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.Fmsb2.ScrapView", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.Fmsb2.DefectArea", "DefectArea")
                        .WithMany("ScrapView")
                        .HasForeignKey("DefectAreaId")
                        .HasConstraintName("FK_ScrapView_DefectArea")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.Fmsb2.Defects", "Defect")
                        .WithMany("ScrapView")
                        .HasForeignKey("DefectId")
                        .HasConstraintName("FK_ScrapView_Defects")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.Fmsb2.Department", "Dept")
                        .WithMany("ScrapView")
                        .HasForeignKey("DeptId")
                        .HasConstraintName("FK_ScrapView_Department")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.Fmsb2.Machines", "Machine")
                        .WithMany("ScrapView")
                        .HasForeignKey("MachineId")
                        .HasConstraintName("FK_ScrapView_Machines")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.Fmsb2.ScrapViewName", "ViewNameNavigation")
                        .WithMany("ScrapView")
                        .HasForeignKey("ViewName")
                        .HasConstraintName("FK_ScrapView_ScrapViewName");
                });
#pragma warning restore 612, 618
        }
    }
}
