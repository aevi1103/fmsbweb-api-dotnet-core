// <auto-generated />
using System;
using FmsbwebCoreApi.Context.QualityCheckSheets;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FmsbwebCoreApi.Migrations.QualityCheckSheets
{
    [DbContext(typeof(QualityCheckSheetsContext))]
    [Migration("20200731190011_AddPartSeed")]
    partial class AddPartSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FmsbwebCoreApi.Entity.QualityCheckSheets.Characteristic", b =>
                {
                    b.Property<int>("CharacteristicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ControlMethodId")
                        .HasColumnType("int");

                    b.Property<int>("DisplayAsId")
                        .HasColumnType("int");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<string>("Gauge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HelperText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Max")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Min")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Nom")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OrganizationPartId")
                        .HasColumnType("int");

                    b.Property<bool?>("PassFail")
                        .HasColumnType("bit");

                    b.Property<string>("ReferenceNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CharacteristicId");

                    b.HasIndex("ControlMethodId");

                    b.HasIndex("DisplayAsId");

                    b.HasIndex("MachineId");

                    b.HasIndex("OrganizationPartId");

                    b.ToTable("Characteristics");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.QualityCheckSheets.ControlMethod", b =>
                {
                    b.Property<int>("ControlMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("ControlMethodId");

                    b.ToTable("ControlMethods");

                    b.HasData(
                        new
                        {
                            ControlMethodId = 1,
                            Method = "Machining Check Sheet",
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 149, DateTimeKind.Local).AddTicks(3317)
                        },
                        new
                        {
                            ControlMethodId = 2,
                            Method = "Quality Inspection Summary",
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(4277)
                        });
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.QualityCheckSheets.DisplayAs", b =>
                {
                    b.Property<int>("DisplayAsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Display")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("DisplayAsId");

                    b.ToTable("DisplayAs");

                    b.HasData(
                        new
                        {
                            DisplayAsId = 1,
                            Display = "Number",
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7660)
                        },
                        new
                        {
                            DisplayAsId = 2,
                            Display = "Percent",
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7732)
                        },
                        new
                        {
                            DisplayAsId = 3,
                            Display = "Degrees",
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7765)
                        },
                        new
                        {
                            DisplayAsId = 4,
                            Display = "PositiveNegative",
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7785)
                        },
                        new
                        {
                            DisplayAsId = 5,
                            Display = "PassFail",
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7804)
                        });
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.QualityCheckSheets.Line", b =>
                {
                    b.Property<int>("LineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LineId");

                    b.ToTable("Lines");

                    b.HasData(
                        new
                        {
                            LineId = 1,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(4560),
                            Value = "1"
                        },
                        new
                        {
                            LineId = 2,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(4675),
                            Value = "2"
                        },
                        new
                        {
                            LineId = 3,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(4702),
                            Value = "3"
                        },
                        new
                        {
                            LineId = 4,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(4723),
                            Value = "4"
                        },
                        new
                        {
                            LineId = 5,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(5624),
                            Value = "5"
                        },
                        new
                        {
                            LineId = 6,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6041),
                            Value = "6"
                        },
                        new
                        {
                            LineId = 7,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6446),
                            Value = "7"
                        },
                        new
                        {
                            LineId = 8,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6847),
                            Value = "8"
                        },
                        new
                        {
                            LineId = 9,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7199),
                            Value = "9"
                        });
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.QualityCheckSheets.Machine", b =>
                {
                    b.Property<int>("MachineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MachineId");

                    b.HasIndex("LineId");

                    b.ToTable("Machines");

                    b.HasData(
                        new
                        {
                            MachineId = 1,
                            LineId = 4,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(4816),
                            Value = "Okuma SP"
                        },
                        new
                        {
                            MachineId = 2,
                            LineId = 4,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(5267),
                            Value = "Turmat"
                        },
                        new
                        {
                            MachineId = 3,
                            LineId = 4,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(5315),
                            Value = "Chiron SP"
                        },
                        new
                        {
                            MachineId = 4,
                            LineId = 4,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(5470),
                            Value = "Drill"
                        },
                        new
                        {
                            MachineId = 5,
                            LineId = 4,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(5500),
                            Value = "Diamond Turn SP"
                        },
                        new
                        {
                            MachineId = 6,
                            LineId = 4,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(5575),
                            Value = "Accuriser"
                        },
                        new
                        {
                            MachineId = 7,
                            LineId = 5,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(5649),
                            Value = "Okuma SP"
                        },
                        new
                        {
                            MachineId = 8,
                            LineId = 5,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(5738),
                            Value = "Turmat"
                        },
                        new
                        {
                            MachineId = 9,
                            LineId = 5,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(5783),
                            Value = "Chiron SP"
                        },
                        new
                        {
                            MachineId = 10,
                            LineId = 5,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(5852),
                            Value = "Drill"
                        },
                        new
                        {
                            MachineId = 11,
                            LineId = 5,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(5876),
                            Value = "Diamond Turn SP"
                        },
                        new
                        {
                            MachineId = 12,
                            LineId = 5,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(5996),
                            Value = "Accuriser"
                        },
                        new
                        {
                            MachineId = 13,
                            LineId = 6,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6065),
                            Value = "Okuma SP"
                        },
                        new
                        {
                            MachineId = 14,
                            LineId = 6,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6150),
                            Value = "Turmat"
                        },
                        new
                        {
                            MachineId = 15,
                            LineId = 6,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6194),
                            Value = "Chiron SP"
                        },
                        new
                        {
                            MachineId = 16,
                            LineId = 6,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6260),
                            Value = "Drill"
                        },
                        new
                        {
                            MachineId = 17,
                            LineId = 6,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6284),
                            Value = "Diamond Turn SP"
                        },
                        new
                        {
                            MachineId = 18,
                            LineId = 6,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6401),
                            Value = "Accuriser"
                        },
                        new
                        {
                            MachineId = 19,
                            LineId = 7,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6470),
                            Value = "Okuma SP"
                        },
                        new
                        {
                            MachineId = 20,
                            LineId = 7,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6556),
                            Value = "Turmat"
                        },
                        new
                        {
                            MachineId = 21,
                            LineId = 7,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6600),
                            Value = "Chiron SP"
                        },
                        new
                        {
                            MachineId = 22,
                            LineId = 7,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6668),
                            Value = "Drill"
                        },
                        new
                        {
                            MachineId = 23,
                            LineId = 7,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6692),
                            Value = "Diamond Turn SP"
                        },
                        new
                        {
                            MachineId = 24,
                            LineId = 7,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6760),
                            Value = "Accuriser"
                        },
                        new
                        {
                            MachineId = 25,
                            LineId = 8,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6872),
                            Value = "Okuma SP"
                        },
                        new
                        {
                            MachineId = 26,
                            LineId = 8,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6957),
                            Value = "Turmat"
                        },
                        new
                        {
                            MachineId = 27,
                            LineId = 8,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7000),
                            Value = "Chiron SP"
                        },
                        new
                        {
                            MachineId = 28,
                            LineId = 8,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7065),
                            Value = "Drill"
                        },
                        new
                        {
                            MachineId = 29,
                            LineId = 8,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7089),
                            Value = "Diamond Turn SP"
                        },
                        new
                        {
                            MachineId = 30,
                            LineId = 8,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7156),
                            Value = "Accuriser"
                        },
                        new
                        {
                            MachineId = 31,
                            LineId = 9,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7224),
                            Value = "Okuma SP"
                        },
                        new
                        {
                            MachineId = 32,
                            LineId = 9,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7354),
                            Value = "Turmat"
                        },
                        new
                        {
                            MachineId = 33,
                            LineId = 9,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7398),
                            Value = "Chiron SP"
                        },
                        new
                        {
                            MachineId = 34,
                            LineId = 9,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7465),
                            Value = "Drill"
                        },
                        new
                        {
                            MachineId = 35,
                            LineId = 9,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7489),
                            Value = "Diamond Turn SP"
                        },
                        new
                        {
                            MachineId = 36,
                            LineId = 9,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7555),
                            Value = "Accuriser"
                        });
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.QualityCheckSheets.OrganizationPart", b =>
                {
                    b.Property<int>("OrganizationPartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LeftHandPart")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RightHandPart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("OrganizationPartId");

                    b.ToTable("OrganizationParts");

                    b.HasData(
                        new
                        {
                            OrganizationPartId = 1,
                            LeftHandPart = "81309",
                            RightHandPart = "81310",
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7866)
                        },
                        new
                        {
                            OrganizationPartId = 2,
                            LeftHandPart = "81311",
                            RightHandPart = "81312",
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7876)
                        },
                        new
                        {
                            OrganizationPartId = 3,
                            LeftHandPart = "81313",
                            RightHandPart = "81314",
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7928)
                        });
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.QualityCheckSheets.SubMachine", b =>
                {
                    b.Property<int>("SubMachineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubMachineId");

                    b.HasIndex("MachineId");

                    b.ToTable("SubMachines");

                    b.HasData(
                        new
                        {
                            SubMachineId = 1,
                            MachineId = 1,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(5132),
                            Value = "OK1"
                        },
                        new
                        {
                            SubMachineId = 2,
                            MachineId = 1,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(5214),
                            Value = "OK2"
                        },
                        new
                        {
                            SubMachineId = 3,
                            MachineId = 1,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(5237),
                            Value = "OK3"
                        },
                        new
                        {
                            SubMachineId = 4,
                            MachineId = 2,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(5293),
                            Value = "Turmat"
                        },
                        new
                        {
                            SubMachineId = 5,
                            MachineId = 3,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(5341),
                            Value = "Chiron 1"
                        },
                        new
                        {
                            SubMachineId = 6,
                            MachineId = 3,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(5365),
                            Value = "Chiron 2"
                        },
                        new
                        {
                            SubMachineId = 7,
                            MachineId = 5,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(5529),
                            Value = "DT1"
                        },
                        new
                        {
                            SubMachineId = 8,
                            MachineId = 5,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(5551),
                            Value = "DT2"
                        },
                        new
                        {
                            SubMachineId = 9,
                            MachineId = 6,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(5601),
                            Value = "Accuriser"
                        },
                        new
                        {
                            SubMachineId = 10,
                            MachineId = 7,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(5673),
                            Value = "OK1"
                        },
                        new
                        {
                            SubMachineId = 11,
                            MachineId = 7,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(5694),
                            Value = "OK2"
                        },
                        new
                        {
                            SubMachineId = 12,
                            MachineId = 7,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(5714),
                            Value = "OK3"
                        },
                        new
                        {
                            SubMachineId = 13,
                            MachineId = 8,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(5762),
                            Value = "Turmat"
                        },
                        new
                        {
                            SubMachineId = 14,
                            MachineId = 9,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(5808),
                            Value = "Chiron 1"
                        },
                        new
                        {
                            SubMachineId = 15,
                            MachineId = 9,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(5829),
                            Value = "Chiron 2"
                        },
                        new
                        {
                            SubMachineId = 16,
                            MachineId = 11,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(5950),
                            Value = "DT1"
                        },
                        new
                        {
                            SubMachineId = 17,
                            MachineId = 11,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(5971),
                            Value = "DT2"
                        },
                        new
                        {
                            SubMachineId = 18,
                            MachineId = 12,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6021),
                            Value = "Accuriser"
                        },
                        new
                        {
                            SubMachineId = 19,
                            MachineId = 13,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6088),
                            Value = "OK1"
                        },
                        new
                        {
                            SubMachineId = 20,
                            MachineId = 13,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6108),
                            Value = "OK2"
                        },
                        new
                        {
                            SubMachineId = 21,
                            MachineId = 13,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6128),
                            Value = "OK3"
                        },
                        new
                        {
                            SubMachineId = 22,
                            MachineId = 14,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6173),
                            Value = "Turmat"
                        },
                        new
                        {
                            SubMachineId = 23,
                            MachineId = 15,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6217),
                            Value = "Chiron 1"
                        },
                        new
                        {
                            SubMachineId = 24,
                            MachineId = 15,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6237),
                            Value = "Chiron 2"
                        },
                        new
                        {
                            SubMachineId = 25,
                            MachineId = 17,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6310),
                            Value = "DT1"
                        },
                        new
                        {
                            SubMachineId = 26,
                            MachineId = 17,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6330),
                            Value = "DT2"
                        },
                        new
                        {
                            SubMachineId = 27,
                            MachineId = 18,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6427),
                            Value = "Accuriser"
                        },
                        new
                        {
                            SubMachineId = 28,
                            MachineId = 19,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6492),
                            Value = "OK1"
                        },
                        new
                        {
                            SubMachineId = 29,
                            MachineId = 19,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6513),
                            Value = "OK2"
                        },
                        new
                        {
                            SubMachineId = 30,
                            MachineId = 19,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6533),
                            Value = "OK3"
                        },
                        new
                        {
                            SubMachineId = 31,
                            MachineId = 20,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6579),
                            Value = "Turmat"
                        },
                        new
                        {
                            SubMachineId = 32,
                            MachineId = 21,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6623),
                            Value = "Chiron 1"
                        },
                        new
                        {
                            SubMachineId = 33,
                            MachineId = 21,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6643),
                            Value = "Chiron 2"
                        },
                        new
                        {
                            SubMachineId = 34,
                            MachineId = 23,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6717),
                            Value = "DT1"
                        },
                        new
                        {
                            SubMachineId = 35,
                            MachineId = 23,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6738),
                            Value = "DT2"
                        },
                        new
                        {
                            SubMachineId = 36,
                            MachineId = 24,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6784),
                            Value = "Accuriser"
                        },
                        new
                        {
                            SubMachineId = 37,
                            MachineId = 25,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6895),
                            Value = "OK1"
                        },
                        new
                        {
                            SubMachineId = 38,
                            MachineId = 25,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6915),
                            Value = "OK2"
                        },
                        new
                        {
                            SubMachineId = 39,
                            MachineId = 25,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6934),
                            Value = "OK3"
                        },
                        new
                        {
                            SubMachineId = 40,
                            MachineId = 26,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(6980),
                            Value = "Turmat"
                        },
                        new
                        {
                            SubMachineId = 41,
                            MachineId = 27,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7023),
                            Value = "Chiron 1"
                        },
                        new
                        {
                            SubMachineId = 42,
                            MachineId = 27,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7043),
                            Value = "Chiron 2"
                        },
                        new
                        {
                            SubMachineId = 43,
                            MachineId = 29,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7113),
                            Value = "DT1"
                        },
                        new
                        {
                            SubMachineId = 44,
                            MachineId = 29,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7133),
                            Value = "DT2"
                        },
                        new
                        {
                            SubMachineId = 45,
                            MachineId = 30,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7180),
                            Value = "Accuriser"
                        },
                        new
                        {
                            SubMachineId = 46,
                            MachineId = 31,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7246),
                            Value = "OK1"
                        },
                        new
                        {
                            SubMachineId = 47,
                            MachineId = 31,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7310),
                            Value = "OK2"
                        },
                        new
                        {
                            SubMachineId = 48,
                            MachineId = 31,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7330),
                            Value = "OK3"
                        },
                        new
                        {
                            SubMachineId = 49,
                            MachineId = 32,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7377),
                            Value = "Turmat"
                        },
                        new
                        {
                            SubMachineId = 50,
                            MachineId = 33,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7423),
                            Value = "Chiron 1"
                        },
                        new
                        {
                            SubMachineId = 51,
                            MachineId = 33,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7443),
                            Value = "Chiron 2"
                        },
                        new
                        {
                            SubMachineId = 52,
                            MachineId = 35,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7513),
                            Value = "DT1"
                        },
                        new
                        {
                            SubMachineId = 53,
                            MachineId = 35,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7533),
                            Value = "DT2"
                        },
                        new
                        {
                            SubMachineId = 54,
                            MachineId = 36,
                            TimeStamp = new DateTime(2020, 7, 31, 15, 0, 11, 153, DateTimeKind.Local).AddTicks(7579),
                            Value = "Accuriser"
                        });
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.QualityCheckSheets.Characteristic", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.QualityCheckSheets.ControlMethod", "ControlMethod")
                        .WithMany()
                        .HasForeignKey("ControlMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.QualityCheckSheets.DisplayAs", "DisplayAs")
                        .WithMany()
                        .HasForeignKey("DisplayAsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.QualityCheckSheets.Machine", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.QualityCheckSheets.OrganizationPart", "OrganizationPart")
                        .WithMany()
                        .HasForeignKey("OrganizationPartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.QualityCheckSheets.Machine", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.QualityCheckSheets.Line", "Line")
                        .WithMany()
                        .HasForeignKey("LineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.QualityCheckSheets.SubMachine", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.QualityCheckSheets.Machine", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
