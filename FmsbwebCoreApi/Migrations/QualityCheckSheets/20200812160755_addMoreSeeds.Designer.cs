// <auto-generated />
using System;
using FmsbwebCoreApi.Context.QualityCheckSheets;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FmsbwebCoreApi.Migrations.QualityCheckSheets
{
    [DbContext(typeof(QualityCheckSheetsContext))]
    [Migration("20200812160755_addMoreSeeds")]
    partial class addMoreSeeds
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FmsbwebCoreApi.Entity.QualityCheckSheets.Characteristic", b =>
                {
                    b.Property<int>("CharacteristicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ControlMethodId")
                        .HasColumnType("int");

                    b.Property<int>("DisplayAsId")
                        .HasColumnType("int");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<string>("Gauge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HelperText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Max")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Min")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Nom")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OrganizationPartId")
                        .HasColumnType("int");

                    b.Property<bool?>("PassFail")
                        .HasColumnType("bit");

                    b.Property<string>("ReferenceNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CharacteristicId");

                    b.HasIndex("ControlMethodId");

                    b.HasIndex("DisplayAsId");

                    b.HasIndex("MachineId");

                    b.HasIndex("OrganizationPartId");

                    b.ToTable("Characteristics");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.QualityCheckSheets.ControlMethod", b =>
                {
                    b.Property<int>("ControlMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("ControlMethodId");

                    b.ToTable("ControlMethods");

                    b.HasData(
                        new
                        {
                            ControlMethodId = 1,
                            Method = "Machining Check Sheet",
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 111, DateTimeKind.Local).AddTicks(5347)
                        },
                        new
                        {
                            ControlMethodId = 2,
                            Method = "Quality Inspection Summary",
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 115, DateTimeKind.Local).AddTicks(9049)
                        });
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.QualityCheckSheets.DisplayAs", b =>
                {
                    b.Property<int>("DisplayAsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Display")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("DisplayAsId");

                    b.ToTable("DisplayAs");

                    b.HasData(
                        new
                        {
                            DisplayAsId = 1,
                            Display = "Number",
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(9614)
                        },
                        new
                        {
                            DisplayAsId = 2,
                            Display = "Percent",
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 117, DateTimeKind.Local).AddTicks(790)
                        },
                        new
                        {
                            DisplayAsId = 3,
                            Display = "Degrees",
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 117, DateTimeKind.Local).AddTicks(850)
                        },
                        new
                        {
                            DisplayAsId = 4,
                            Display = "NegativePositive",
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 117, DateTimeKind.Local).AddTicks(869)
                        },
                        new
                        {
                            DisplayAsId = 5,
                            Display = "PassFail",
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 117, DateTimeKind.Local).AddTicks(886)
                        },
                        new
                        {
                            DisplayAsId = 6,
                            Display = "Positive",
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 117, DateTimeKind.Local).AddTicks(905)
                        },
                        new
                        {
                            DisplayAsId = 7,
                            Display = "Reference",
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 117, DateTimeKind.Local).AddTicks(923)
                        });
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.QualityCheckSheets.Line", b =>
                {
                    b.Property<int>("LineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LineId");

                    b.ToTable("Lines");

                    b.HasData(
                        new
                        {
                            LineId = 1,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(307),
                            Value = "1"
                        },
                        new
                        {
                            LineId = 2,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(1606),
                            Value = "2"
                        },
                        new
                        {
                            LineId = 3,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(1666),
                            Value = "3"
                        },
                        new
                        {
                            LineId = 4,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(1689),
                            Value = "4"
                        },
                        new
                        {
                            LineId = 5,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(6823),
                            Value = "5"
                        },
                        new
                        {
                            LineId = 6,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7227),
                            Value = "6"
                        },
                        new
                        {
                            LineId = 7,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7659),
                            Value = "7"
                        },
                        new
                        {
                            LineId = 8,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8048),
                            Value = "8"
                        },
                        new
                        {
                            LineId = 9,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8436),
                            Value = "9"
                        });
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.QualityCheckSheets.Machine", b =>
                {
                    b.Property<int>("MachineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MachineId");

                    b.HasIndex("LineId");

                    b.ToTable("Machines");

                    b.HasData(
                        new
                        {
                            MachineId = 1,
                            LineId = 4,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(2619),
                            Value = "Okuma SP"
                        },
                        new
                        {
                            MachineId = 2,
                            LineId = 4,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(6469),
                            Value = "Turmat"
                        },
                        new
                        {
                            MachineId = 3,
                            LineId = 4,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(6602),
                            Value = "Chiron SP"
                        },
                        new
                        {
                            MachineId = 4,
                            LineId = 4,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(6679),
                            Value = "Drill"
                        },
                        new
                        {
                            MachineId = 5,
                            LineId = 4,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(6704),
                            Value = "Diamond Turn SP"
                        },
                        new
                        {
                            MachineId = 6,
                            LineId = 4,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(6777),
                            Value = "Accuriser"
                        },
                        new
                        {
                            MachineId = 7,
                            LineId = 5,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(6850),
                            Value = "Okuma SP"
                        },
                        new
                        {
                            MachineId = 8,
                            LineId = 5,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(6937),
                            Value = "Turmat"
                        },
                        new
                        {
                            MachineId = 9,
                            LineId = 5,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7017),
                            Value = "Chiron SP"
                        },
                        new
                        {
                            MachineId = 10,
                            LineId = 5,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7091),
                            Value = "Drill"
                        },
                        new
                        {
                            MachineId = 11,
                            LineId = 5,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7114),
                            Value = "Diamond Turn SP"
                        },
                        new
                        {
                            MachineId = 12,
                            LineId = 5,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7184),
                            Value = "Accuriser"
                        },
                        new
                        {
                            MachineId = 13,
                            LineId = 6,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7251),
                            Value = "Okuma SP"
                        },
                        new
                        {
                            MachineId = 14,
                            LineId = 6,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7337),
                            Value = "Turmat"
                        },
                        new
                        {
                            MachineId = 15,
                            LineId = 6,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7381),
                            Value = "Chiron SP"
                        },
                        new
                        {
                            MachineId = 16,
                            LineId = 6,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7523),
                            Value = "Drill"
                        },
                        new
                        {
                            MachineId = 17,
                            LineId = 6,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7546),
                            Value = "Diamond Turn SP"
                        },
                        new
                        {
                            MachineId = 18,
                            LineId = 6,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7615),
                            Value = "Accuriser"
                        },
                        new
                        {
                            MachineId = 19,
                            LineId = 7,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7681),
                            Value = "Okuma SP"
                        },
                        new
                        {
                            MachineId = 20,
                            LineId = 7,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7766),
                            Value = "Turmat"
                        },
                        new
                        {
                            MachineId = 21,
                            LineId = 7,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7809),
                            Value = "Chiron SP"
                        },
                        new
                        {
                            MachineId = 22,
                            LineId = 7,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7914),
                            Value = "Drill"
                        },
                        new
                        {
                            MachineId = 23,
                            LineId = 7,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7939),
                            Value = "Diamond Turn SP"
                        },
                        new
                        {
                            MachineId = 24,
                            LineId = 7,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8006),
                            Value = "Accuriser"
                        },
                        new
                        {
                            MachineId = 25,
                            LineId = 8,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8070),
                            Value = "Okuma SP"
                        },
                        new
                        {
                            MachineId = 26,
                            LineId = 8,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8155),
                            Value = "Turmat"
                        },
                        new
                        {
                            MachineId = 27,
                            LineId = 8,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8199),
                            Value = "Chiron SP"
                        },
                        new
                        {
                            MachineId = 28,
                            LineId = 8,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8265),
                            Value = "Drill"
                        },
                        new
                        {
                            MachineId = 29,
                            LineId = 8,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8288),
                            Value = "Diamond Turn SP"
                        },
                        new
                        {
                            MachineId = 30,
                            LineId = 8,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8394),
                            Value = "Accuriser"
                        },
                        new
                        {
                            MachineId = 31,
                            LineId = 9,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8462),
                            Value = "Okuma SP"
                        },
                        new
                        {
                            MachineId = 32,
                            LineId = 9,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8547),
                            Value = "Turmat"
                        },
                        new
                        {
                            MachineId = 33,
                            LineId = 9,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8590),
                            Value = "Chiron SP"
                        },
                        new
                        {
                            MachineId = 34,
                            LineId = 9,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8657),
                            Value = "Drill"
                        },
                        new
                        {
                            MachineId = 35,
                            LineId = 9,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8680),
                            Value = "Diamond Turn SP"
                        },
                        new
                        {
                            MachineId = 36,
                            LineId = 9,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8838),
                            Value = "Accuriser"
                        });
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.QualityCheckSheets.OrganizationPart", b =>
                {
                    b.Property<int>("OrganizationPartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LeftHandPart")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RightHandPart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("OrganizationPartId");

                    b.ToTable("OrganizationParts");

                    b.HasData(
                        new
                        {
                            OrganizationPartId = 1,
                            LeftHandPart = "81309",
                            RightHandPart = "81310",
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 117, DateTimeKind.Local).AddTicks(1792)
                        },
                        new
                        {
                            OrganizationPartId = 2,
                            LeftHandPart = "81311",
                            RightHandPart = "81312",
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 117, DateTimeKind.Local).AddTicks(2831)
                        },
                        new
                        {
                            OrganizationPartId = 3,
                            LeftHandPart = "81313",
                            RightHandPart = "81314",
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 117, DateTimeKind.Local).AddTicks(2860)
                        });
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.QualityCheckSheets.SubMachine", b =>
                {
                    b.Property<int>("SubMachineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubMachineId");

                    b.HasIndex("MachineId");

                    b.ToTable("SubMachines");

                    b.HasData(
                        new
                        {
                            SubMachineId = 1,
                            MachineId = 1,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(4958),
                            Value = "OK1"
                        },
                        new
                        {
                            SubMachineId = 2,
                            MachineId = 1,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(6359),
                            Value = "OK2"
                        },
                        new
                        {
                            SubMachineId = 3,
                            MachineId = 1,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(6426),
                            Value = "OK3"
                        },
                        new
                        {
                            SubMachineId = 4,
                            MachineId = 2,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(6578),
                            Value = "Turmat"
                        },
                        new
                        {
                            SubMachineId = 5,
                            MachineId = 3,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(6632),
                            Value = "Chiron 1"
                        },
                        new
                        {
                            SubMachineId = 6,
                            MachineId = 3,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(6656),
                            Value = "Chiron 2"
                        },
                        new
                        {
                            SubMachineId = 7,
                            MachineId = 5,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(6733),
                            Value = "DT1"
                        },
                        new
                        {
                            SubMachineId = 8,
                            MachineId = 5,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(6753),
                            Value = "DT2"
                        },
                        new
                        {
                            SubMachineId = 9,
                            MachineId = 6,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(6802),
                            Value = "Accuriser"
                        },
                        new
                        {
                            SubMachineId = 10,
                            MachineId = 7,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(6876),
                            Value = "OK1"
                        },
                        new
                        {
                            SubMachineId = 11,
                            MachineId = 7,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(6895),
                            Value = "OK2"
                        },
                        new
                        {
                            SubMachineId = 12,
                            MachineId = 7,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(6913),
                            Value = "OK3"
                        },
                        new
                        {
                            SubMachineId = 13,
                            MachineId = 8,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(6961),
                            Value = "Turmat"
                        },
                        new
                        {
                            SubMachineId = 14,
                            MachineId = 9,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7048),
                            Value = "Chiron 1"
                        },
                        new
                        {
                            SubMachineId = 15,
                            MachineId = 9,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7068),
                            Value = "Chiron 2"
                        },
                        new
                        {
                            SubMachineId = 16,
                            MachineId = 11,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7141),
                            Value = "DT1"
                        },
                        new
                        {
                            SubMachineId = 17,
                            MachineId = 11,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7160),
                            Value = "DT2"
                        },
                        new
                        {
                            SubMachineId = 18,
                            MachineId = 12,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7208),
                            Value = "Accuriser"
                        },
                        new
                        {
                            SubMachineId = 19,
                            MachineId = 13,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7275),
                            Value = "OK1"
                        },
                        new
                        {
                            SubMachineId = 20,
                            MachineId = 13,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7294),
                            Value = "OK2"
                        },
                        new
                        {
                            SubMachineId = 21,
                            MachineId = 13,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7313),
                            Value = "OK3"
                        },
                        new
                        {
                            SubMachineId = 22,
                            MachineId = 14,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7360),
                            Value = "Turmat"
                        },
                        new
                        {
                            SubMachineId = 23,
                            MachineId = 15,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7406),
                            Value = "Chiron 1"
                        },
                        new
                        {
                            SubMachineId = 24,
                            MachineId = 15,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7498),
                            Value = "Chiron 2"
                        },
                        new
                        {
                            SubMachineId = 25,
                            MachineId = 17,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7573),
                            Value = "DT1"
                        },
                        new
                        {
                            SubMachineId = 26,
                            MachineId = 17,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7592),
                            Value = "DT2"
                        },
                        new
                        {
                            SubMachineId = 27,
                            MachineId = 18,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7640),
                            Value = "Accuriser"
                        },
                        new
                        {
                            SubMachineId = 28,
                            MachineId = 19,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7705),
                            Value = "OK1"
                        },
                        new
                        {
                            SubMachineId = 29,
                            MachineId = 19,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7724),
                            Value = "OK2"
                        },
                        new
                        {
                            SubMachineId = 30,
                            MachineId = 19,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7743),
                            Value = "OK3"
                        },
                        new
                        {
                            SubMachineId = 31,
                            MachineId = 20,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7789),
                            Value = "Turmat"
                        },
                        new
                        {
                            SubMachineId = 32,
                            MachineId = 21,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7833),
                            Value = "Chiron 1"
                        },
                        new
                        {
                            SubMachineId = 33,
                            MachineId = 21,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7853),
                            Value = "Chiron 2"
                        },
                        new
                        {
                            SubMachineId = 34,
                            MachineId = 23,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7964),
                            Value = "DT1"
                        },
                        new
                        {
                            SubMachineId = 35,
                            MachineId = 23,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(7984),
                            Value = "DT2"
                        },
                        new
                        {
                            SubMachineId = 36,
                            MachineId = 24,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8030),
                            Value = "Accuriser"
                        },
                        new
                        {
                            SubMachineId = 37,
                            MachineId = 25,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8093),
                            Value = "OK1"
                        },
                        new
                        {
                            SubMachineId = 38,
                            MachineId = 25,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8113),
                            Value = "OK2"
                        },
                        new
                        {
                            SubMachineId = 39,
                            MachineId = 25,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8132),
                            Value = "OK3"
                        },
                        new
                        {
                            SubMachineId = 40,
                            MachineId = 26,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8179),
                            Value = "Turmat"
                        },
                        new
                        {
                            SubMachineId = 41,
                            MachineId = 27,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8223),
                            Value = "Chiron 1"
                        },
                        new
                        {
                            SubMachineId = 42,
                            MachineId = 27,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8243),
                            Value = "Chiron 2"
                        },
                        new
                        {
                            SubMachineId = 43,
                            MachineId = 29,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8351),
                            Value = "DT1"
                        },
                        new
                        {
                            SubMachineId = 44,
                            MachineId = 29,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8372),
                            Value = "DT2"
                        },
                        new
                        {
                            SubMachineId = 45,
                            MachineId = 30,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8418),
                            Value = "Accuriser"
                        },
                        new
                        {
                            SubMachineId = 46,
                            MachineId = 31,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8485),
                            Value = "OK1"
                        },
                        new
                        {
                            SubMachineId = 47,
                            MachineId = 31,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8505),
                            Value = "OK2"
                        },
                        new
                        {
                            SubMachineId = 48,
                            MachineId = 31,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8524),
                            Value = "OK3"
                        },
                        new
                        {
                            SubMachineId = 49,
                            MachineId = 32,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8570),
                            Value = "Turmat"
                        },
                        new
                        {
                            SubMachineId = 50,
                            MachineId = 33,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8615),
                            Value = "Chiron 1"
                        },
                        new
                        {
                            SubMachineId = 51,
                            MachineId = 33,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8635),
                            Value = "Chiron 2"
                        },
                        new
                        {
                            SubMachineId = 52,
                            MachineId = 35,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8705),
                            Value = "DT1"
                        },
                        new
                        {
                            SubMachineId = 53,
                            MachineId = 35,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8814),
                            Value = "DT2"
                        },
                        new
                        {
                            SubMachineId = 54,
                            MachineId = 36,
                            TimeStamp = new DateTime(2020, 8, 12, 12, 7, 55, 116, DateTimeKind.Local).AddTicks(8863),
                            Value = "Accuriser"
                        });
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.QualityCheckSheets.Characteristic", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.QualityCheckSheets.ControlMethod", "ControlMethod")
                        .WithMany()
                        .HasForeignKey("ControlMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.QualityCheckSheets.DisplayAs", "DisplayAs")
                        .WithMany()
                        .HasForeignKey("DisplayAsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.QualityCheckSheets.Machine", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.QualityCheckSheets.OrganizationPart", "OrganizationPart")
                        .WithMany("Characteristics")
                        .HasForeignKey("OrganizationPartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.QualityCheckSheets.Machine", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.QualityCheckSheets.Line", "Line")
                        .WithMany("Machines")
                        .HasForeignKey("LineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.QualityCheckSheets.SubMachine", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.QualityCheckSheets.Machine", "Machine")
                        .WithMany("SubMachines")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
