// <auto-generated />
using System;
using FmsbwebCoreApi.Context.QualityCheckSheets;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FmsbwebCoreApi.Migrations.QualityCheckSheets
{
    [DbContext(typeof(QualityCheckSheetsContext))]
    [Migration("20200731184059_AddControlMethodAndDisplayAsSeed")]
    partial class AddControlMethodAndDisplayAsSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FmsbwebCoreApi.Entity.QualityCheckSheets.Characteristic", b =>
                {
                    b.Property<int>("CharacteristicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ControlMethodId")
                        .HasColumnType("int");

                    b.Property<int>("DisplayAsId")
                        .HasColumnType("int");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<string>("Gauge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HelperText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Max")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Min")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Nom")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OrganizationPartId")
                        .HasColumnType("int");

                    b.Property<bool?>("PassFail")
                        .HasColumnType("bit");

                    b.Property<string>("ReferenceNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CharacteristicId");

                    b.HasIndex("ControlMethodId");

                    b.HasIndex("DisplayAsId");

                    b.HasIndex("MachineId");

                    b.HasIndex("OrganizationPartId");

                    b.ToTable("Characteristics");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.QualityCheckSheets.ControlMethod", b =>
                {
                    b.Property<int>("ControlMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("ControlMethodId");

                    b.ToTable("ControlMethods");

                    b.HasData(
                        new
                        {
                            ControlMethodId = 1,
                            Method = "Machining Check Sheet",
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 73, DateTimeKind.Local).AddTicks(5294)
                        },
                        new
                        {
                            ControlMethodId = 2,
                            Method = "Quality Inspection Summary",
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 77, DateTimeKind.Local).AddTicks(9065)
                        });
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.QualityCheckSheets.DisplayAs", b =>
                {
                    b.Property<int>("DisplayAsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Display")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("DisplayAsId");

                    b.ToTable("DisplayAs");

                    b.HasData(
                        new
                        {
                            DisplayAsId = 1,
                            Display = "Number",
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(2049)
                        },
                        new
                        {
                            DisplayAsId = 2,
                            Display = "Percent",
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(2145)
                        },
                        new
                        {
                            DisplayAsId = 3,
                            Display = "Degrees",
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(2166)
                        },
                        new
                        {
                            DisplayAsId = 4,
                            Display = "PositiveNegative",
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(2184)
                        },
                        new
                        {
                            DisplayAsId = 5,
                            Display = "PassFail",
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(2202)
                        });
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.QualityCheckSheets.Line", b =>
                {
                    b.Property<int>("LineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LineId");

                    b.ToTable("Lines");

                    b.HasData(
                        new
                        {
                            LineId = 1,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 77, DateTimeKind.Local).AddTicks(9445),
                            Value = "1"
                        },
                        new
                        {
                            LineId = 2,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 77, DateTimeKind.Local).AddTicks(9582),
                            Value = "2"
                        },
                        new
                        {
                            LineId = 3,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 77, DateTimeKind.Local).AddTicks(9608),
                            Value = "3"
                        },
                        new
                        {
                            LineId = 4,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 77, DateTimeKind.Local).AddTicks(9627),
                            Value = "4"
                        },
                        new
                        {
                            LineId = 5,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(230),
                            Value = "5"
                        },
                        new
                        {
                            LineId = 6,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(639),
                            Value = "6"
                        },
                        new
                        {
                            LineId = 7,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(939),
                            Value = "7"
                        },
                        new
                        {
                            LineId = 8,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1278),
                            Value = "8"
                        },
                        new
                        {
                            LineId = 9,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1645),
                            Value = "9"
                        });
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.QualityCheckSheets.Machine", b =>
                {
                    b.Property<int>("MachineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MachineId");

                    b.HasIndex("LineId");

                    b.ToTable("Machines");

                    b.HasData(
                        new
                        {
                            MachineId = 1,
                            LineId = 4,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 77, DateTimeKind.Local).AddTicks(9714),
                            Value = "Okuma SP"
                        },
                        new
                        {
                            MachineId = 2,
                            LineId = 4,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(24),
                            Value = "Turmat"
                        },
                        new
                        {
                            MachineId = 3,
                            LineId = 4,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(48),
                            Value = "Chiron SP"
                        },
                        new
                        {
                            MachineId = 4,
                            LineId = 4,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(117),
                            Value = "Drill"
                        },
                        new
                        {
                            MachineId = 5,
                            LineId = 4,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(139),
                            Value = "Diamond Turn SP"
                        },
                        new
                        {
                            MachineId = 6,
                            LineId = 4,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(207),
                            Value = "Accuriser"
                        },
                        new
                        {
                            MachineId = 7,
                            LineId = 5,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(260),
                            Value = "Okuma SP"
                        },
                        new
                        {
                            MachineId = 8,
                            LineId = 5,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(346),
                            Value = "Turmat"
                        },
                        new
                        {
                            MachineId = 9,
                            LineId = 5,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(369),
                            Value = "Chiron SP"
                        },
                        new
                        {
                            MachineId = 10,
                            LineId = 5,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(434),
                            Value = "Drill"
                        },
                        new
                        {
                            MachineId = 11,
                            LineId = 5,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(548),
                            Value = "Diamond Turn SP"
                        },
                        new
                        {
                            MachineId = 12,
                            LineId = 5,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(617),
                            Value = "Accuriser"
                        },
                        new
                        {
                            MachineId = 13,
                            LineId = 6,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(662),
                            Value = "Okuma SP"
                        },
                        new
                        {
                            MachineId = 14,
                            LineId = 6,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(746),
                            Value = "Turmat"
                        },
                        new
                        {
                            MachineId = 15,
                            LineId = 6,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(768),
                            Value = "Chiron SP"
                        },
                        new
                        {
                            MachineId = 16,
                            LineId = 6,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(831),
                            Value = "Drill"
                        },
                        new
                        {
                            MachineId = 17,
                            LineId = 6,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(853),
                            Value = "Diamond Turn SP"
                        },
                        new
                        {
                            MachineId = 18,
                            LineId = 6,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(918),
                            Value = "Accuriser"
                        },
                        new
                        {
                            MachineId = 19,
                            LineId = 7,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1001),
                            Value = "Okuma SP"
                        },
                        new
                        {
                            MachineId = 20,
                            LineId = 7,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1086),
                            Value = "Turmat"
                        },
                        new
                        {
                            MachineId = 21,
                            LineId = 7,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1109),
                            Value = "Chiron SP"
                        },
                        new
                        {
                            MachineId = 22,
                            LineId = 7,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1172),
                            Value = "Drill"
                        },
                        new
                        {
                            MachineId = 23,
                            LineId = 7,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1194),
                            Value = "Diamond Turn SP"
                        },
                        new
                        {
                            MachineId = 24,
                            LineId = 7,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1258),
                            Value = "Accuriser"
                        },
                        new
                        {
                            MachineId = 25,
                            LineId = 8,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1301),
                            Value = "Okuma SP"
                        },
                        new
                        {
                            MachineId = 26,
                            LineId = 8,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1385),
                            Value = "Turmat"
                        },
                        new
                        {
                            MachineId = 27,
                            LineId = 8,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1407),
                            Value = "Chiron SP"
                        },
                        new
                        {
                            MachineId = 28,
                            LineId = 8,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1538),
                            Value = "Drill"
                        },
                        new
                        {
                            MachineId = 29,
                            LineId = 8,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1560),
                            Value = "Diamond Turn SP"
                        },
                        new
                        {
                            MachineId = 30,
                            LineId = 8,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1624),
                            Value = "Accuriser"
                        },
                        new
                        {
                            MachineId = 31,
                            LineId = 9,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1668),
                            Value = "Okuma SP"
                        },
                        new
                        {
                            MachineId = 32,
                            LineId = 9,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1751),
                            Value = "Turmat"
                        },
                        new
                        {
                            MachineId = 33,
                            LineId = 9,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1773),
                            Value = "Chiron SP"
                        },
                        new
                        {
                            MachineId = 34,
                            LineId = 9,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1838),
                            Value = "Drill"
                        },
                        new
                        {
                            MachineId = 35,
                            LineId = 9,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1901),
                            Value = "Diamond Turn SP"
                        },
                        new
                        {
                            MachineId = 36,
                            LineId = 9,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1968),
                            Value = "Accuriser"
                        });
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.QualityCheckSheets.OrganizationPart", b =>
                {
                    b.Property<int>("OrganizationPartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LeftHandPart")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RightHandPart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("OrganizationPartId");

                    b.ToTable("OrganizationParts");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.QualityCheckSheets.SubMachine", b =>
                {
                    b.Property<int>("SubMachineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubMachineId");

                    b.HasIndex("MachineId");

                    b.ToTable("SubMachines");

                    b.HasData(
                        new
                        {
                            SubMachineId = 1,
                            MachineId = 1,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 77, DateTimeKind.Local).AddTicks(9907),
                            Value = "OK1"
                        },
                        new
                        {
                            SubMachineId = 2,
                            MachineId = 1,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 77, DateTimeKind.Local).AddTicks(9975),
                            Value = "OK2"
                        },
                        new
                        {
                            SubMachineId = 3,
                            MachineId = 1,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 77, DateTimeKind.Local).AddTicks(9996),
                            Value = "OK3"
                        },
                        new
                        {
                            SubMachineId = 4,
                            MachineId = 3,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(72),
                            Value = "Chiron 1"
                        },
                        new
                        {
                            SubMachineId = 5,
                            MachineId = 3,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(93),
                            Value = "Chiron 2"
                        },
                        new
                        {
                            SubMachineId = 6,
                            MachineId = 5,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(167),
                            Value = "DT1"
                        },
                        new
                        {
                            SubMachineId = 7,
                            MachineId = 5,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(187),
                            Value = "DT2"
                        },
                        new
                        {
                            SubMachineId = 8,
                            MachineId = 7,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(283),
                            Value = "OK1"
                        },
                        new
                        {
                            SubMachineId = 9,
                            MachineId = 7,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(303),
                            Value = "OK2"
                        },
                        new
                        {
                            SubMachineId = 10,
                            MachineId = 7,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(324),
                            Value = "OK3"
                        },
                        new
                        {
                            SubMachineId = 11,
                            MachineId = 9,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(393),
                            Value = "Chiron 1"
                        },
                        new
                        {
                            SubMachineId = 12,
                            MachineId = 9,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(413),
                            Value = "Chiron 2"
                        },
                        new
                        {
                            SubMachineId = 13,
                            MachineId = 11,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(576),
                            Value = "DT1"
                        },
                        new
                        {
                            SubMachineId = 14,
                            MachineId = 11,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(597),
                            Value = "DT2"
                        },
                        new
                        {
                            SubMachineId = 15,
                            MachineId = 13,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(684),
                            Value = "OK1"
                        },
                        new
                        {
                            SubMachineId = 16,
                            MachineId = 13,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(704),
                            Value = "OK2"
                        },
                        new
                        {
                            SubMachineId = 17,
                            MachineId = 13,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(723),
                            Value = "OK3"
                        },
                        new
                        {
                            SubMachineId = 18,
                            MachineId = 15,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(790),
                            Value = "Chiron 1"
                        },
                        new
                        {
                            SubMachineId = 19,
                            MachineId = 15,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(810),
                            Value = "Chiron 2"
                        },
                        new
                        {
                            SubMachineId = 20,
                            MachineId = 17,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(877),
                            Value = "DT1"
                        },
                        new
                        {
                            SubMachineId = 21,
                            MachineId = 17,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(898),
                            Value = "DT2"
                        },
                        new
                        {
                            SubMachineId = 22,
                            MachineId = 19,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1025),
                            Value = "OK1"
                        },
                        new
                        {
                            SubMachineId = 23,
                            MachineId = 19,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1045),
                            Value = "OK2"
                        },
                        new
                        {
                            SubMachineId = 24,
                            MachineId = 19,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1065),
                            Value = "OK3"
                        },
                        new
                        {
                            SubMachineId = 25,
                            MachineId = 21,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1131),
                            Value = "Chiron 1"
                        },
                        new
                        {
                            SubMachineId = 26,
                            MachineId = 21,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1151),
                            Value = "Chiron 2"
                        },
                        new
                        {
                            SubMachineId = 27,
                            MachineId = 23,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1217),
                            Value = "DT1"
                        },
                        new
                        {
                            SubMachineId = 28,
                            MachineId = 23,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1237),
                            Value = "DT2"
                        },
                        new
                        {
                            SubMachineId = 29,
                            MachineId = 25,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1323),
                            Value = "OK1"
                        },
                        new
                        {
                            SubMachineId = 30,
                            MachineId = 25,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1344),
                            Value = "OK2"
                        },
                        new
                        {
                            SubMachineId = 31,
                            MachineId = 25,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1363),
                            Value = "OK3"
                        },
                        new
                        {
                            SubMachineId = 32,
                            MachineId = 27,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1494),
                            Value = "Chiron 1"
                        },
                        new
                        {
                            SubMachineId = 33,
                            MachineId = 27,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1515),
                            Value = "Chiron 2"
                        },
                        new
                        {
                            SubMachineId = 34,
                            MachineId = 29,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1583),
                            Value = "DT1"
                        },
                        new
                        {
                            SubMachineId = 35,
                            MachineId = 29,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1604),
                            Value = "DT2"
                        },
                        new
                        {
                            SubMachineId = 36,
                            MachineId = 31,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1690),
                            Value = "OK1"
                        },
                        new
                        {
                            SubMachineId = 37,
                            MachineId = 31,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1710),
                            Value = "OK2"
                        },
                        new
                        {
                            SubMachineId = 38,
                            MachineId = 31,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1730),
                            Value = "OK3"
                        },
                        new
                        {
                            SubMachineId = 39,
                            MachineId = 33,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1797),
                            Value = "Chiron 1"
                        },
                        new
                        {
                            SubMachineId = 40,
                            MachineId = 33,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1817),
                            Value = "Chiron 2"
                        },
                        new
                        {
                            SubMachineId = 41,
                            MachineId = 35,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1927),
                            Value = "DT1"
                        },
                        new
                        {
                            SubMachineId = 42,
                            MachineId = 35,
                            TimeStamp = new DateTime(2020, 7, 31, 14, 40, 59, 78, DateTimeKind.Local).AddTicks(1947),
                            Value = "DT2"
                        });
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.QualityCheckSheets.Characteristic", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.QualityCheckSheets.ControlMethod", "ControlMethod")
                        .WithMany()
                        .HasForeignKey("ControlMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.QualityCheckSheets.DisplayAs", "DisplayAs")
                        .WithMany()
                        .HasForeignKey("DisplayAsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.QualityCheckSheets.Machine", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.QualityCheckSheets.OrganizationPart", "OrganizationPart")
                        .WithMany()
                        .HasForeignKey("OrganizationPartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.QualityCheckSheets.Machine", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.QualityCheckSheets.Line", "Line")
                        .WithMany()
                        .HasForeignKey("LineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.QualityCheckSheets.SubMachine", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.QualityCheckSheets.Machine", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
