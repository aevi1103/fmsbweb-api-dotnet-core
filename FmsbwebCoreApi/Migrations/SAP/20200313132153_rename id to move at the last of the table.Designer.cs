// <auto-generated />
using System;
using FmsbwebCoreApi.Context.SAP;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FmsbwebCoreApi.Migrations.SAP
{
    [DbContext(typeof(SapContext))]
    [Migration("20200313132153_rename id to move at the last of the table")]
    partial class renameidtomoveatthelastofthetable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FmsbwebCoreApi.Entity.SAP.AvgShipDayPart", b =>
                {
                    b.Property<string>("Material")
                        .HasColumnName("material")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("AvgShipDay")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("avg_ship_day")
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Show")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("show")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("SkidQty")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("skidQty")
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Material");

                    b.ToTable("AvgShipDayPart");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.SAP.DmaxParts", b =>
                {
                    b.Property<string>("MaterialDmax")
                        .HasColumnName("material_dmax")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("MaterialDmax");

                    b.ToTable("DmaxParts");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.SAP.EscalationMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Escalation_Message");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.SAP.EscalationRecipients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EmailRecipients")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Shift")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Escalation_Recipients");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.SAP.ExcludedProgram", b =>
                {
                    b.Property<string>("Program")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<byte[]>("Stamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Program");

                    b.ToTable("ExcludedProgram");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.SAP.InvProgramTargets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Max")
                        .HasColumnName("max")
                        .HasColumnType("int");

                    b.Property<int>("Min")
                        .HasColumnName("min")
                        .HasColumnType("int");

                    b.Property<string>("Program")
                        .IsRequired()
                        .HasColumnName("program")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Sloc")
                        .IsRequired()
                        .HasColumnName("SLOC")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Stamp")
                        .HasColumnName("stamp")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("InvProgramTargets");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.SAP.KpiTargets", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("DeptId")
                        .IsRequired()
                        .HasColumnName("deptId")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Kpi")
                        .IsRequired()
                        .HasColumnName("kpi")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("Max")
                        .HasColumnName("max")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Min")
                        .HasColumnName("min")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnName("modifiedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("KPI_Targets");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.SAP.MachineMapping", b =>
                {
                    b.Property<string>("Machine")
                        .HasColumnName("machine")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Deptid")
                        .HasColumnName("deptid")
                        .HasColumnType("int");

                    b.Property<string>("Line")
                        .HasColumnName("line")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MachineHxh")
                        .IsRequired()
                        .HasColumnName("machine_hxh")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("MachineId")
                        .HasColumnName("machineId")
                        .HasColumnType("int");

                    b.Property<string>("MachineMapping1")
                        .HasColumnName("MachineMapping")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Side")
                        .HasColumnName("side")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Machine");

                    b.ToTable("MachineMapping");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.SAP.Production", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EnteredTime")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EnteredUser")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ExportFileName")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<bool?>("IsFiveDayShift")
                        .HasColumnName("isFiveDayShift")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LocalDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<long>("OrderNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("Shift")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<int?>("Shift8")
                        .HasColumnName("shift_8")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ShiftDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ShiftDate8")
                        .HasColumnName("shiftDate_8")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UkDateTime")
                        .HasColumnName("UK_DateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UoM")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("WorkCenter")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal>("Yield")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("Production");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.SAP.ProductionTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EnteredTime")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EnteredUser")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ExportFileName")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<bool?>("IsFiveDayShift")
                        .HasColumnName("isFiveDayShift")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LocalDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<long>("OrderNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("Shift")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<int?>("Shift8")
                        .HasColumnName("shift_8")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ShiftDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ShiftDate8")
                        .HasColumnName("shiftDate_8")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UkDateTime")
                        .HasColumnName("UK_DateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UoM")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("WorkCenter")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal>("Yield")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("Production_Temp");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.SAP.SapDump2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnName("date")
                        .HasColumnType("datetime");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("MaterialDescription")
                        .HasColumnName("Material Description")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("Per")
                        .HasColumnName("per")
                        .HasColumnType("int");

                    b.Property<decimal?>("StandardPrice")
                        .HasColumnName("Standard price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("TotalUnrestInv")
                        .HasColumnName("Total Unrest. Inv.")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("UnrstSloc7000")
                        .HasColumnName("Unrst. SLOC 7000")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("UploadDateTime")
                        .HasColumnName("uploadDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ValuationClass")
                        .HasColumnName("Valuation Class")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal?>("_0100RawPistonsP7S")
                        .HasColumnName("0100 Raw Pistons (P7's)")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0105AssyComponents")
                        .HasColumnName("0105 Assy Components")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0108ProtoCompts")
                        .HasColumnName("0108  Proto compts")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0109SbTrComponents")
                        .HasColumnName("0109 SB Tr components")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_01150120")
                        .HasColumnName("01150120")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0125MachLineside")
                        .HasColumnName("0125 Mach lineside")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0128ProtoLineSide")
                        .HasColumnName("0128 Proto line side")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0130MachinedPistonsP3m")
                        .HasColumnName("0130 machined pistons (P3M)")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0135CompletedNotInShipping")
                        .HasColumnName("0135 completed not in shipping")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0136AFOverflow")
                        .HasColumnName("0136 A & F overflow")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0137MbPistonsP2f")
                        .HasColumnName("0137 MB pistons P2F")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0140ComponentsAssy")
                        .HasColumnName("0140 Components assy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0149SbTrComponentsAssy")
                        .HasColumnName("0149 SB tr components assy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0160QcBusStop")
                        .HasColumnName("0160 QC Bus stop")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0161QcSuspectHold")
                        .HasColumnName("0161 QC Suspect Hold")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0162QcPpapHold")
                        .HasColumnName("0162 QC PPAP Hold")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0163Gp12")
                        .HasColumnName("0163 GP12")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0164MbHoldArea")
                        .HasColumnName("0164 MB Hold area")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0165Scrap")
                        .HasColumnName("0165 scrap")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0169SbTrHold")
                        .HasColumnName("0169 SB Tr Hold")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0300FinGdsSb")
                        .HasColumnName("0300 Fin gds SB")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0303FgMb")
                        .HasColumnName("0303 FG MB")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0305HodgeFg")
                        .HasColumnName("0305 Hodge FG")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0309FgSbTr")
                        .HasColumnName("0309 FG SB Tr")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0400InTransit")
                        .HasColumnName("0400 In transit")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0403MbWip")
                        .HasColumnName("0403 MB WIP")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("SAP_Dump2");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.SAP.SapDumpNew", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnName("date")
                        .HasColumnType("datetime");

                    b.Property<string>("Material")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MaterialDescription")
                        .HasColumnName("Material Description")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("Per")
                        .HasColumnName("per")
                        .HasColumnType("int");

                    b.Property<string>("Program")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal?>("Qc01")
                        .HasColumnName("QC01")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Qc02")
                        .HasColumnName("QC02")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("StandardPrice")
                        .HasColumnName("Standard price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("TotalUnrestInv")
                        .HasColumnName("Total Unrest. Inv.")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("UploadDateTime")
                        .HasColumnName("uploadDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ValuationClass")
                        .HasColumnName("Valuation Class")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal?>("_0111")
                        .HasColumnName("0111")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0115")
                        .HasColumnName("0115")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0125")
                        .HasColumnName("0125")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0130")
                        .HasColumnName("0130")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0131")
                        .HasColumnName("0131")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0135")
                        .HasColumnName("0135")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0140")
                        .HasColumnName("0140")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0160")
                        .HasColumnName("0160")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0300")
                        .HasColumnName("0300")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_4001")
                        .HasColumnName("4001")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_4002")
                        .HasColumnName("4002")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_4003")
                        .HasColumnName("4003")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_4004")
                        .HasColumnName("4004")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_4005")
                        .HasColumnName("4005")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_4006")
                        .HasColumnName("4006")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_4007")
                        .HasColumnName("4007")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_4008")
                        .HasColumnName("4008")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_4009")
                        .HasColumnName("4009")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_4010")
                        .HasColumnName("4010")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_5001")
                        .HasColumnName("5001")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_5002")
                        .HasColumnName("5002")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_5003")
                        .HasColumnName("5003")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_5004")
                        .HasColumnName("5004")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_5005")
                        .HasColumnName("5005")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_5006")
                        .HasColumnName("5006")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_5007")
                        .HasColumnName("5007")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_5008")
                        .HasColumnName("5008")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_5009")
                        .HasColumnName("5009")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_5010")
                        .HasColumnName("5010")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("SAP_Dump_New");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.SAP.SapDumpWithSafetyStock", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InventoryId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnName("date")
                        .HasColumnType("datetime");

                    b.Property<string>("Material")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MaterialDescription")
                        .HasColumnName("Material Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Per")
                        .HasColumnName("per")
                        .HasColumnType("int");

                    b.Property<string>("Program")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("Qc01")
                        .HasColumnName("QC01")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Qc02")
                        .HasColumnName("QC02")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("SafetyStock")
                        .HasColumnName("SafetyStock")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("StandardPrice")
                        .HasColumnName("Standard price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("TotalUnrestInv")
                        .HasColumnName("Total Unrest. Inv.")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("UploadDateTime")
                        .HasColumnName("uploadDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ValuationClass")
                        .HasColumnName("Valuation Class")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("_0111")
                        .HasColumnName("0111")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0115")
                        .HasColumnName("0115")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0125")
                        .HasColumnName("0125")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0130")
                        .HasColumnName("0130")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0131")
                        .HasColumnName("0131")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0135")
                        .HasColumnName("0135")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0140")
                        .HasColumnName("0140")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0160")
                        .HasColumnName("0160")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_0300")
                        .HasColumnName("0300")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_4001")
                        .HasColumnName("4001")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_4002")
                        .HasColumnName("4002")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_4003")
                        .HasColumnName("4003")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_4004")
                        .HasColumnName("4004")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_4005")
                        .HasColumnName("4005")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_4006")
                        .HasColumnName("4006")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_4007")
                        .HasColumnName("4007")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_4008")
                        .HasColumnName("4008")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_4009")
                        .HasColumnName("4009")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_4010")
                        .HasColumnName("4010")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_5001")
                        .HasColumnName("5001")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_5002")
                        .HasColumnName("5002")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_5003")
                        .HasColumnName("5003")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_5004")
                        .HasColumnName("5004")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_5005")
                        .HasColumnName("5005")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_5006")
                        .HasColumnName("5006")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_5007")
                        .HasColumnName("5007")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_5008")
                        .HasColumnName("5008")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_5009")
                        .HasColumnName("5009")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("_5010")
                        .HasColumnName("5010")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("InventoryId");

                    b.ToTable("SAP_Dump_With_SafetyStock");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.SAP.SapProdOrders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActFinishTimeExecutn")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ActStartDateExecution")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Activity")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Date")
                        .HasColumnName("date")
                        .HasColumnType("datetime");

                    b.Property<int?>("OperationQuantity")
                        .HasColumnType("int");

                    b.Property<string>("OperationUnit")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("OperationsShortText")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<long?>("Order")
                        .HasColumnType("bigint");

                    b.Property<string>("SystemStatus")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime>("UploadDateTime")
                        .HasColumnName("uploadDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("WorkCenter")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("SAP_ProdOrders");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.SAP.Scrap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EnteredTime")
                        .IsRequired()
                        .HasColumnName("enteredTime")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EnteredUser")
                        .IsRequired()
                        .HasColumnName("enteredUser")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("EteredDate")
                        .HasColumnName("eteredDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ExportFileName")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int?>("HourHxh")
                        .HasColumnName("hour_hxh")
                        .HasColumnType("int");

                    b.Property<string>("InputMaterialNumber")
                        .HasColumnName("inputMaterialNumber")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("IsAutoGaugeScrap")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsFiveDayShift")
                        .HasColumnName("isFiveDayShift")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPurchashed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPurchashedExclude")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("LocalDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("MaterialNumber")
                        .IsRequired()
                        .HasColumnName("materialNumber")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("OperationNumber")
                        .HasColumnName("operationNumber")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("OperationNumberLoc")
                        .HasColumnName("operationNumberLoc")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<long>("ProdOrderNumber")
                        .HasColumnName("prodOrderNumber")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Qty")
                        .HasColumnName("qty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ScrapCode")
                        .IsRequired()
                        .HasColumnName("scrapCode")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ScrapDesc")
                        .IsRequired()
                        .HasColumnName("scrapDesc")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ScrapGroup")
                        .HasColumnName("scrapGroup")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Shift")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<int?>("Shift8")
                        .HasColumnName("shift_8")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ShiftDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ShiftDate8")
                        .HasColumnName("shiftDate_8")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UkDateTime")
                        .HasColumnName("UK_DateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Uom")
                        .IsRequired()
                        .HasColumnName("uom")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("WorkCenter")
                        .IsRequired()
                        .HasColumnName("workCenter")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Scrap");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.SAP.ScrapAreaCode", b =>
                {
                    b.Property<int>("ScrapAreaCode1")
                        .HasColumnName("scrapAreaCode")
                        .HasColumnType("int");

                    b.Property<string>("ColorCode")
                        .HasColumnName("colorCode")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ScrapAreaName")
                        .IsRequired()
                        .HasColumnName("scrapAreaName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("ScrapAreaCode1");

                    b.ToTable("ScrapAreaCode");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.SAP.ScrapEscalation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlertLevel")
                        .HasColumnName("alert_level")
                        .HasColumnType("int");

                    b.Property<int>("EscalationMsgId")
                        .HasColumnName("escalationMsgId")
                        .HasColumnType("int");

                    b.Property<int>("EscalationRecipientId")
                        .HasColumnName("escalationRecipientId")
                        .HasColumnType("int");

                    b.Property<string>("Machine")
                        .IsRequired()
                        .HasColumnName("machine")
                        .HasColumnType("varchar(5000)")
                        .HasMaxLength(5000)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnName("modifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Qty")
                        .HasColumnName("qty")
                        .HasColumnType("int");

                    b.Property<string>("ScrapCode")
                        .IsRequired()
                        .HasColumnName("scrapCode")
                        .HasColumnType("varchar(5000)")
                        .HasMaxLength(5000)
                        .IsUnicode(false);

                    b.Property<string>("Shift")
                        .HasColumnName("shift")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("EscalationMsgId");

                    b.HasIndex("EscalationRecipientId");

                    b.ToTable("Scrap_Escalation");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.SAP.ScrapEscalationLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AcknowledgeComment")
                        .HasColumnName("acknowledgeComment")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("AcknowledgeStamp")
                        .HasColumnName("acknowledgeStamp")
                        .HasColumnType("datetime");

                    b.Property<int>("AlertLevel")
                        .HasColumnName("alertLevel")
                        .HasColumnType("int");

                    b.Property<bool>("IsAcknowledged")
                        .HasColumnName("isAcknowledged")
                        .HasColumnType("bit");

                    b.Property<int>("Qty")
                        .HasColumnName("qty")
                        .HasColumnType("int");

                    b.Property<int>("ScrapCode")
                        .HasColumnName("scrapCode")
                        .HasColumnType("int");

                    b.Property<int>("ScrapEscalationId")
                        .HasColumnName("scrapEscalationId")
                        .HasColumnType("int");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnName("shift")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<DateTime>("ShiftDate")
                        .HasColumnName("shiftDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Stamp")
                        .HasColumnName("stamp")
                        .HasColumnType("datetime");

                    b.Property<string>("WorkCenter")
                        .IsRequired()
                        .HasColumnName("workCenter")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("ScrapEscalationId");

                    b.ToTable("ScrapEscalationLog");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.SAP.ScrapTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EnteredTime")
                        .IsRequired()
                        .HasColumnName("enteredTime")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EnteredUser")
                        .IsRequired()
                        .HasColumnName("enteredUser")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("EteredDate")
                        .HasColumnName("eteredDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ExportFileName")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int?>("HourHxh")
                        .HasColumnName("hour_hxh")
                        .HasColumnType("int");

                    b.Property<string>("InputMaterialNumber")
                        .HasColumnName("inputMaterialNumber")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("IsAutoGaugeScrap")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsFiveDayShift")
                        .HasColumnName("isFiveDayShift")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPurchashed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPurchashedExclude")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("LocalDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("MaterialNumber")
                        .IsRequired()
                        .HasColumnName("materialNumber")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("OperationNumber")
                        .HasColumnName("operationNumber")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("OperationNumberLoc")
                        .HasColumnName("operationNumberLoc")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<long>("ProdOrderNumber")
                        .HasColumnName("prodOrderNumber")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Qty")
                        .HasColumnName("qty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ScrapCode")
                        .IsRequired()
                        .HasColumnName("scrapCode")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ScrapDesc")
                        .IsRequired()
                        .HasColumnName("scrapDesc")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ScrapGroup")
                        .HasColumnName("scrapGroup")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Shift")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<int?>("Shift8")
                        .HasColumnName("shift_8")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ShiftDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ShiftDate8")
                        .HasColumnName("shiftDate_8")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UkDateTime")
                        .HasColumnName("UK_DateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Uom")
                        .IsRequired()
                        .HasColumnName("uom")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("WorkCenter")
                        .IsRequired()
                        .HasColumnName("workCenter")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Scrap_temp");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.SAP.SlocOrder", b =>
                {
                    b.Property<string>("Sloc")
                        .HasColumnName("SLOC")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Slocname")
                        .HasColumnName("SLOCName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Sloc");

                    b.ToTable("SLOC_Order");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.SAP.ScrapEscalation", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.SAP.EscalationMessage", "EscalationMsg")
                        .WithMany("ScrapEscalation")
                        .HasForeignKey("EscalationMsgId")
                        .HasConstraintName("FK_ScrapEscalations_EscalationMessage")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.SAP.EscalationRecipients", "EscalationRecipient")
                        .WithMany("ScrapEscalation")
                        .HasForeignKey("EscalationRecipientId")
                        .HasConstraintName("FK_ScrapEscalations_EscalationRecipients")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.SAP.ScrapEscalationLog", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.SAP.ScrapEscalation", "ScrapEscalation")
                        .WithMany("ScrapEscalationLog")
                        .HasForeignKey("ScrapEscalationId")
                        .HasConstraintName("FK_ScrapEscalationLog_Scrap_Escalation")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
