// <auto-generated />
using System;
using FmsbwebCoreApi.Context.FmsbMvc;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FmsbwebCoreApi.Migrations.FmsbMvc
{
    [DbContext(typeof(FmsbMvcContext))]
    partial class FmsbMvcContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.Area", b =>
                {
                    b.Property<int>("AreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<DateTime>("Stamp")
                        .HasColumnType("datetime");

                    b.HasKey("AreaId");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.ToTable("Area","FmsbWeb");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.AspNetRoles", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUserClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .HasName("IX_UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUserLogins", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("LoginProvider", "ProviderKey", "UserId")
                        .HasName("PK_dbo.AspNetUserLogins");

                    b.HasIndex("UserId")
                        .HasName("IX_UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUserRoles", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("UserId", "RoleId")
                        .HasName("PK_dbo.AspNetUserRoles");

                    b.HasIndex("RoleId")
                        .HasName("IX_RoleId");

                    b.HasIndex("UserId")
                        .HasName("IX_UserId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LockoutEndDateUtc")
                        .HasColumnType("datetime");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.Assignments", b =>
                {
                    b.Property<int>("AssignmentsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int>("NumOfConversation")
                        .HasColumnType("int");

                    b.Property<DateTime>("Stamp")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<int>("TopicsId")
                        .HasColumnType("int");

                    b.HasKey("AssignmentsId");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.HasIndex("DepartmentId")
                        .HasName("IX_DepartmentId");

                    b.HasIndex("TopicsId")
                        .HasName("IX_TopicsId");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.Block", b =>
                {
                    b.Property<int>("BlockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("BlockName")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PartNumberId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime");

                    b.Property<string>("Warning")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BlockId");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.HasIndex("PartNumberId")
                        .HasName("IX_PartNumberId");

                    b.ToTable("Block","DieStatus");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.BreakdownReason2", b =>
                {
                    b.Property<int>("BreakdownReason2Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("BreakDown")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MaintenanceBreakDownReasonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Stamp")
                        .HasColumnType("datetime");

                    b.HasKey("BreakdownReason2Id");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.HasIndex("MaintenanceBreakDownReasonId")
                        .HasName("IX_MaintenanceBreakDownReasonId");

                    b.ToTable("BreakdownReason2","Alert");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.CastingCell", b =>
                {
                    b.Property<int>("CastingCellName")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<bool>("IsDualCavity")
                        .HasColumnType("bit");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime");

                    b.HasKey("CastingCellName")
                        .HasName("PK_DieStatus.CastingCell");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.ToTable("CastingCell","DieStatus");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.ClockNumber", b =>
                {
                    b.Property<int>("ClockNumberId")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<DateTime>("DateHired")
                        .HasColumnType("datetime");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Stamp")
                        .HasColumnType("datetime");

                    b.HasKey("ClockNumberId");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.ToTable("ClockNumber","Overtime");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.Departments", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Stamp")
                        .HasColumnType("datetime");

                    b.HasKey("DepartmentId")
                        .HasName("PK_dbo.Departments");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.Die", b =>
                {
                    b.Property<int>("DieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("BlockComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BlockId")
                        .HasColumnType("int");

                    b.Property<int>("DieCoatingLife")
                        .HasColumnType("int");

                    b.Property<string>("DieComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DieName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime");

                    b.Property<string>("Warning")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DieId");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.HasIndex("BlockId")
                        .HasName("IX_BlockId");

                    b.ToTable("Die","DieStatus");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.DieTracker", b =>
                {
                    b.Property<int>("DieTrackerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<DateTime?>("BlockChangeDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CastingCellName")
                        .HasColumnType("int");

                    b.Property<int>("CellSideEnum")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DieChangeDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DieId")
                        .HasColumnType("int");

                    b.Property<int>("DieLocationEnum")
                        .HasColumnType("int");

                    b.Property<int>("OddEvenEnum")
                        .HasColumnType("int");

                    b.Property<string>("PartNumberId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime");

                    b.HasKey("DieTrackerId");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.HasIndex("CastingCellName")
                        .HasName("IX_CastingCellName");

                    b.HasIndex("DieId")
                        .HasName("IX_DieId");

                    b.HasIndex("PartNumberId")
                        .HasName("IX_PartNumberId");

                    b.ToTable("DieTracker","DieStatus");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.Discipline", b =>
                {
                    b.Property<int>("DisciplineLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("ClockNumber")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("DisciplineLevelsId")
                        .HasColumnType("int");

                    b.Property<int>("DisciplineTopicId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<int>("ShiftNameId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Stamp")
                        .HasColumnType("datetime");

                    b.Property<int>("SupervisorClockNumber")
                        .HasColumnType("int");

                    b.Property<string>("SupervisorName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("DisciplineLogId")
                        .HasName("PK_Discipline.Discipline");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.HasIndex("DepartmentId")
                        .HasName("IX_DepartmentId");

                    b.HasIndex("DisciplineLevelsId")
                        .HasName("IX_DisciplineLevelsId");

                    b.HasIndex("DisciplineTopicId")
                        .HasName("IX_DisciplineTopicId");

                    b.HasIndex("ShiftNameId")
                        .HasName("IX_ShiftNameId");

                    b.ToTable("Discipline","Discipline");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.DisciplineLevels", b =>
                {
                    b.Property<int>("DisciplineLevelsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Levels")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime>("Stamp")
                        .HasColumnType("datetime");

                    b.HasKey("DisciplineLevelsId");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.ToTable("DisciplineLevels","Discipline");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.DisciplineTopic", b =>
                {
                    b.Property<int>("DisciplineTopicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<DateTime>("Stamp")
                        .HasColumnType("datetime");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("DisciplineTopicId");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.ToTable("DisciplineTopic","Discipline");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.DowntimeTriggerThreshold", b =>
                {
                    b.Property<int>("DowntimeTriggerThresholdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("DeptName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsLive")
                        .HasColumnType("bit");

                    b.Property<int>("Threshold")
                        .HasColumnType("int");

                    b.HasKey("DowntimeTriggerThresholdId");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.ToTable("DowntimeTriggerThreshold","Iconics");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.EmailNotificationRecipients", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("ShiftNameId")
                        .HasColumnType("int");

                    b.HasKey("Email")
                        .HasName("PK_dbo.EmailNotificationRecipients");

                    b.HasIndex("DepartmentId")
                        .HasName("IX_DepartmentId");

                    b.HasIndex("ShiftNameId")
                        .HasName("IX_ShiftNameId");

                    b.ToTable("EmailNotificationRecipients");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.EmployeeFeedbacks", b =>
                {
                    b.Property<int>("EmployeeFeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Feedback")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("EmployeeFeedbackId")
                        .HasName("PK_dbo.EmployeeFeedbacks");

                    b.ToTable("EmployeeFeedbacks");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.EmployeeJob", b =>
                {
                    b.Property<int>("EmployeeJobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("ClockNumberId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("JobTitleId")
                        .HasColumnType("int");

                    b.Property<int>("ShiftNameId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Stamp")
                        .HasColumnType("datetime");

                    b.HasKey("EmployeeJobId");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.HasIndex("ClockNumberId")
                        .HasName("IX_ClockNumberId");

                    b.HasIndex("DepartmentId")
                        .HasName("IX_DepartmentId");

                    b.HasIndex("JobTitleId")
                        .HasName("IX_JobTitleId");

                    b.HasIndex("ShiftNameId")
                        .HasName("IX_ShiftNameId");

                    b.ToTable("EmployeeJob","Overtime");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.EstimatedPm", b =>
                {
                    b.Property<int>("EstimatedPmid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EstimatedPMId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("DaysBeforePm")
                        .HasColumnName("DaysBeforePM")
                        .HasColumnType("int");

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<int>("MinDaysBeforePm")
                        .HasColumnName("MinDaysBeforePM")
                        .HasColumnType("int");

                    b.Property<DateTime>("Stamp")
                        .HasColumnType("datetime");

                    b.HasKey("EstimatedPmid");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.HasIndex("MachineId")
                        .HasName("IX_MachineId");

                    b.ToTable("EstimatedPM","Maintenance");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.Forklift", b =>
                {
                    b.Property<int>("ForkliftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<DateTime?>("CompletedDateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("ForkliftTaskId")
                        .HasColumnType("int");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWorking")
                        .HasColumnType("bit");

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("WorkingDateTime")
                        .HasColumnType("datetime");

                    b.HasKey("ForkliftId");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.HasIndex("ForkliftTaskId")
                        .HasName("IX_ForkliftTaskId");

                    b.HasIndex("MachineId")
                        .HasName("IX_MachineId");

                    b.ToTable("Forklift","Alert");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.ForkliftTask", b =>
                {
                    b.Property<int>("ForkliftTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsObsolete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Stamp")
                        .HasColumnType("datetime");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ForkliftTaskId");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.HasIndex("DepartmentId")
                        .HasName("IX_DepartmentId");

                    b.ToTable("ForkliftTask","Alert");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.GageCall", b =>
                {
                    b.Property<int>("GageCallId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Characteristics")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Containment")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EndTimeStamp")
                        .HasColumnType("datetime");

                    b.Property<int>("GaugeCallTypeId")
                        .HasColumnType("int");

                    b.Property<int>("GaugeStationId")
                        .HasColumnType("int");

                    b.Property<int?>("HourId")
                        .HasColumnType("int");

                    b.Property<int?>("HxHid")
                        .HasColumnName("HxHId")
                        .HasColumnType("int");

                    b.Property<bool>("IsTurnOver")
                        .HasColumnType("bit");

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<string>("OperatorComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OperatorDowntimeId")
                        .HasColumnType("int");

                    b.Property<string>("QualityTechName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestTimeStamp")
                        .HasColumnType("datetime");

                    b.Property<string>("RequestedBy")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("StartTimeStamp")
                        .HasColumnType("datetime");

                    b.Property<string>("TechComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TieIn")
                        .HasColumnType("bit");

                    b.HasKey("GageCallId");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.HasIndex("GaugeCallTypeId")
                        .HasName("IX_GaugeCallTypeId");

                    b.HasIndex("GaugeStationId")
                        .HasName("IX_GaugeStationId");

                    b.HasIndex("MachineId")
                        .HasName("IX_MachineId");

                    b.HasIndex("OperatorDowntimeId")
                        .HasName("IX_OperatorDowntimeId");

                    b.ToTable("GageCall","Alert");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.GaugeCallType", b =>
                {
                    b.Property<int>("GaugeCallTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GaugeCall")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GaugeCallTypeId");

                    b.ToTable("GaugeCallType","Gauge");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.GaugeStation", b =>
                {
                    b.Property<int>("GaugeStationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Station")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GaugeStationId");

                    b.ToTable("GaugeStation","Gauge");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.HxHpushAlerts", b =>
                {
                    b.Property<int>("HxHpushAlertsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HxHPushAlertsId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<int>("HxHpushEnum")
                        .HasColumnName("HxHPushEnum")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime");

                    b.HasKey("HxHpushAlertsId");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.ToTable("HxHPushAlerts","HxH");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.JobTitle", b =>
                {
                    b.Property<int>("JobTitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(8000)")
                        .HasMaxLength(8000)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Stamp")
                        .HasColumnType("datetime");

                    b.HasKey("JobTitleId");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.HasIndex("DepartmentId")
                        .HasName("IX_DepartmentId");

                    b.ToTable("JobTitle","Overtime");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.Kpi", b =>
                {
                    b.Property<int>("Kpiid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KPIId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Kpiname")
                        .IsRequired()
                        .HasColumnName("KPIName")
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<DateTime>("Stamp")
                        .HasColumnType("datetime");

                    b.HasKey("Kpiid");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.ToTable("KPI","FmsbWeb");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.KpiByProgram1", b =>
                {
                    b.Property<int>("KpiByProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<int>("Kpiid")
                        .HasColumnName("KPIId")
                        .HasColumnType("int");

                    b.Property<int>("MonthNumber")
                        .HasColumnType("int");

                    b.Property<int>("ProgramId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Stamp")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Target")
                        .HasColumnType("decimal(18, 5)");

                    b.HasKey("KpiByProgramId")
                        .HasName("PK_FmsbWeb.KpiByProgram");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.HasIndex("AreaId")
                        .HasName("IX_AreaId");

                    b.HasIndex("Kpiid")
                        .HasName("IX_KPIId");

                    b.HasIndex("ProgramId")
                        .HasName("IX_ProgramId");

                    b.ToTable("KpiByProgram","FmsbWeb");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.Kpitarget1", b =>
                {
                    b.Property<int>("KpitargetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KPITargetId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<int>("Kpiid")
                        .HasColumnName("KPIId")
                        .HasColumnType("int");

                    b.Property<decimal>("Max")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal>("Min")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<DateTime>("Stamp")
                        .HasColumnType("datetime");

                    b.HasKey("KpitargetId")
                        .HasName("PK_FmsbWeb.KPITarget");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.HasIndex("AreaId")
                        .HasName("IX_AreaId");

                    b.HasIndex("Kpiid")
                        .HasName("IX_KPIId");

                    b.ToTable("KPITarget","FmsbWeb");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.Machine", b =>
                {
                    b.Property<int>("MachineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime>("Stamp")
                        .HasColumnType("datetime");

                    b.HasKey("MachineId");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.HasIndex("DepartmentId")
                        .HasName("IX_DepartmentId");

                    b.ToTable("Machine","Maintenance");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.MaintenanceAlert", b =>
                {
                    b.Property<int>("MaintenanceAlertId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("BreakdownComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BreakdownReason2Id")
                        .HasColumnType("int");

                    b.Property<string>("ClockNumberStr")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CompletedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EndedFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HourId")
                        .HasColumnType("int");

                    b.Property<int?>("HxHid")
                        .HasColumnName("HxHId")
                        .HasColumnType("int");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFollowUp")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWorking")
                        .HasColumnType("bit");

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<int>("MaintenanceBreakDownReasonId")
                        .HasColumnType("int");

                    b.Property<string>("MaintenanceTechClockNumbers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OperatorDowntimeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ResponseComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartedFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubMachineId")
                        .HasColumnType("int");

                    b.Property<string>("SupervisorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("WorkingDateTime")
                        .HasColumnType("datetime");

                    b.HasKey("MaintenanceAlertId");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.HasIndex("BreakdownReason2Id")
                        .HasName("IX_BreakdownReason2Id");

                    b.HasIndex("MachineId")
                        .HasName("IX_MachineId");

                    b.HasIndex("MaintenanceBreakDownReasonId")
                        .HasName("IX_MaintenanceBreakDownReasonId");

                    b.HasIndex("OperatorDowntimeId")
                        .HasName("IX_OperatorDowntimeId");

                    b.HasIndex("SubMachineId")
                        .HasName("IX_SubMachineId");

                    b.ToTable("MaintenanceAlert","Alert");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.MaintenanceAlertLog", b =>
                {
                    b.Property<int>("MaintenanceAlertLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("BreakdownComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BreakdownReason2Id")
                        .HasColumnType("int");

                    b.Property<string>("ClockNumberStr")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CompletedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndedFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HourId")
                        .HasColumnType("int");

                    b.Property<int?>("HxHid")
                        .HasColumnName("HxHId")
                        .HasColumnType("int");

                    b.Property<string>("InitialUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFollowUp")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWorking")
                        .HasColumnType("bit");

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<int>("MaintenanceAlertId")
                        .HasColumnType("int");

                    b.Property<int>("MaintenanceBreakDownReasonId")
                        .HasColumnType("int");

                    b.Property<string>("MaintenanceTechClockNumbers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OperatorDowntimeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ResponseComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartedFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SubMachineId")
                        .HasColumnType("int");

                    b.Property<string>("SupervisorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("WorkingDateTime")
                        .HasColumnType("datetime");

                    b.HasKey("MaintenanceAlertLogId");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.HasIndex("BreakdownReason2Id")
                        .HasName("IX_BreakdownReason2Id");

                    b.HasIndex("MachineId")
                        .HasName("IX_MachineId");

                    b.HasIndex("MaintenanceBreakDownReasonId")
                        .HasName("IX_MaintenanceBreakDownReasonId");

                    b.HasIndex("SubMachineId")
                        .HasName("IX_SubMachineId");

                    b.ToTable("MaintenanceAlertLog","Alert");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.MaintenanceBreakDownReason", b =>
                {
                    b.Property<int>("MaintenanceBreakDownReasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("BreakDown")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Stamp")
                        .HasColumnType("datetime");

                    b.HasKey("MaintenanceBreakDownReasonId");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.HasIndex("DepartmentId")
                        .HasName("IX_DepartmentId");

                    b.ToTable("MaintenanceBreakDownReason","Alert");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.MaintenanceTech", b =>
                {
                    b.Property<int>("ClockNumber")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShiftNameId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Stamp")
                        .HasColumnType("datetime");

                    b.HasKey("ClockNumber")
                        .HasName("PK_Maintenance.MaintenanceTech");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.HasIndex("ShiftNameId")
                        .HasName("IX_ShiftNameId");

                    b.ToTable("MaintenanceTech","Maintenance");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.MigrationHistory", b =>
                {
                    b.Property<string>("MigrationId")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("ContextKey")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<byte[]>("Model")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ProductVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.HasKey("MigrationId", "ContextKey")
                        .HasName("PK_dbo.__MigrationHistory");

                    b.ToTable("__MigrationHistory");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.OperatorAutoDowntimeEmailRecipients", b =>
                {
                    b.Property<int>("OperatorAutoDowntimeEmailRecipientsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OperatorAutoDowntimeEmailRecipientsId");

                    b.ToTable("OperatorAutoDowntimeEmailRecipients");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.OperatorDowntime", b =>
                {
                    b.Property<int>("OperatorDowntimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BreakdownReason2Id")
                        .HasColumnType("int");

                    b.Property<int>("DowntimeAutoId")
                        .HasColumnType("int");

                    b.Property<string>("DowntimeComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<int>("HourId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsManualTrigger")
                        .HasColumnType("bit");

                    b.Property<int?>("MachineId")
                        .HasColumnType("int");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaintenanceBreakDownReasonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<string>("StatusText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubMachineId")
                        .HasColumnType("int");

                    b.Property<string>("TagId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime");

                    b.HasKey("OperatorDowntimeId");

                    b.HasIndex("BreakdownReason2Id")
                        .HasName("IX_BreakdownReason2Id");

                    b.HasIndex("MachineId")
                        .HasName("IX_MachineId");

                    b.HasIndex("MaintenanceBreakDownReasonId")
                        .HasName("IX_MaintenanceBreakDownReasonId");

                    b.HasIndex("SubMachineId")
                        .HasName("IX_SubMachineId");

                    b.ToTable("OperatorDowntime","Iconics");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.OvertimeCategory", b =>
                {
                    b.Property<int>("OvertimeCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Stamp")
                        .HasColumnType("datetime");

                    b.HasKey("OvertimeCategoryId");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.ToTable("OvertimeCategory","Overtime");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.OvertimeLog", b =>
                {
                    b.Property<int>("OvertimeLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("ClockNumberId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("varchar(8000)")
                        .HasMaxLength(8000)
                        .IsUnicode(false);

                    b.Property<DateTime>("DateOffered")
                        .HasColumnType("datetime");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<decimal>("Hours")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("OvertimeCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("OvertimeShift")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Stamp")
                        .HasColumnType("datetime");

                    b.Property<string>("Supervisor")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("OvertimeLogId");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.HasIndex("ClockNumberId")
                        .HasName("IX_ClockNumberId");

                    b.HasIndex("DepartmentId")
                        .HasName("IX_DepartmentId");

                    b.HasIndex("OvertimeCategoryId")
                        .HasName("IX_OvertimeCategoryId");

                    b.ToTable("OvertimeLog","Overtime");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.PartNumber", b =>
                {
                    b.Property<string>("PartNumberId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime");

                    b.HasKey("PartNumberId");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.ToTable("PartNumber","DieStatus");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.PreventiveMaintenance", b =>
                {
                    b.Property<int>("PreventiveMaintenanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastCompletedPm")
                        .HasColumnName("LastCompletedPM")
                        .HasColumnType("datetime");

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Stamp")
                        .HasColumnType("datetime");

                    b.HasKey("PreventiveMaintenanceId");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.HasIndex("MachineId")
                        .HasName("IX_MachineId");

                    b.ToTable("PreventiveMaintenance","Maintenance");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.ProcessTech", b =>
                {
                    b.Property<int>("ProcessTechId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("BreakdownComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BreakdownReason2Id")
                        .HasColumnType("int");

                    b.Property<string>("ClockNumberStr")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CompletedDateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("HourId")
                        .HasColumnType("int");

                    b.Property<int?>("HxHid")
                        .HasColumnName("HxHId")
                        .HasColumnType("int");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFollowUp")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisionTech")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWorking")
                        .HasColumnType("bit");

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<int>("MaintenanceBreakDownReasonId")
                        .HasColumnType("int");

                    b.Property<int?>("OperatorDowntimeId")
                        .HasColumnType("int");

                    b.Property<string>("ProcessTechClockNumbers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ResponseComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubMachineId")
                        .HasColumnType("int");

                    b.Property<string>("SupervisorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("WorkingDateTime")
                        .HasColumnType("datetime");

                    b.HasKey("ProcessTechId");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.HasIndex("BreakdownReason2Id")
                        .HasName("IX_BreakdownReason2Id");

                    b.HasIndex("MachineId")
                        .HasName("IX_MachineId");

                    b.HasIndex("MaintenanceBreakDownReasonId")
                        .HasName("IX_MaintenanceBreakDownReasonId");

                    b.HasIndex("OperatorDowntimeId")
                        .HasName("IX_OperatorDowntimeId");

                    b.HasIndex("SubMachineId")
                        .HasName("IX_SubMachineId");

                    b.ToTable("ProcessTech","Alert");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.ProcessTechName", b =>
                {
                    b.Property<int>("ClockNumber")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShiftNameId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Stamp")
                        .HasColumnType("datetime");

                    b.HasKey("ClockNumber")
                        .HasName("PK_ProcessTechs.ProcessTechName");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.HasIndex("DepartmentId")
                        .HasName("IX_DepartmentId");

                    b.HasIndex("ShiftNameId")
                        .HasName("IX_ShiftNameId");

                    b.ToTable("ProcessTechName","ProcessTechs");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.Program", b =>
                {
                    b.Property<int>("ProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProgramName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Stamp")
                        .HasColumnType("datetime");

                    b.HasKey("ProgramId");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.ToTable("Program","FmsbWeb");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.ShiftNames", b =>
                {
                    b.Property<int>("ShiftNameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Shift")
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.HasKey("ShiftNameId")
                        .HasName("PK_dbo.ShiftNames");

                    b.ToTable("ShiftNames");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.SpGetClockNumbersResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Clock")
                        .HasColumnType("int");

                    b.Property<string>("Dept")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fname")
                        .HasColumnName("FName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Job")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .HasColumnName("LName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SP_GetClockNumbers_Result");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.SubMachine", b =>
                {
                    b.Property<int>("SubMachineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<bool>("IsObsolete")
                        .HasColumnType("bit");

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Stamp")
                        .HasColumnType("datetime");

                    b.Property<string>("SubMachineName")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("SubMachineId");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.HasIndex("MachineId")
                        .HasName("IX_MachineId");

                    b.ToTable("SubMachine","Maintenance");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.SubMachinePm", b =>
                {
                    b.Property<int>("SubMachinePmid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SubMachinePMId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCompleted")
                        .HasColumnType("datetime");

                    b.Property<int>("PreventiveMaintenanceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Stamp")
                        .HasColumnType("datetime");

                    b.Property<int>("SubMachineId")
                        .HasColumnType("int");

                    b.HasKey("SubMachinePmid");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.HasIndex("PreventiveMaintenanceId")
                        .HasName("IX_PreventiveMaintenanceId");

                    b.HasIndex("SubMachineId")
                        .HasName("IX_SubMachineId");

                    b.ToTable("SubMachinePM","Maintenance");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.SupervisorConversations", b =>
                {
                    b.Property<int>("SupervisorConversationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("AssignmentsId")
                        .HasColumnType("int");

                    b.Property<int?>("ClockNumber")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeFeedbackId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<int>("ShiftNameId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Stamp")
                        .HasColumnType("datetime");

                    b.Property<int>("SupervisorClockNumber")
                        .HasColumnType("int");

                    b.Property<string>("SupervisorName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("SupervisorConversationId")
                        .HasName("PK_dbo.SupervisorConversations");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.HasIndex("AssignmentsId")
                        .HasName("IX_AssignmentsId");

                    b.HasIndex("DepartmentId")
                        .HasName("IX_DepartmentId");

                    b.HasIndex("EmployeeFeedbackId")
                        .HasName("IX_EmployeeFeedbackId");

                    b.HasIndex("ShiftNameId")
                        .HasName("IX_ShiftNameId");

                    b.ToTable("SupervisorConversations");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.Topics", b =>
                {
                    b.Property<int>("TopicsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<DateTime>("Stamp")
                        .HasColumnType("datetime");

                    b.Property<string>("TopicName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("TopicsId");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.UserDepartments", b =>
                {
                    b.Property<int>("UserDepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Stamp")
                        .HasColumnType("datetime");

                    b.HasKey("UserDepartmentId")
                        .HasName("PK_dbo.UserDepartments");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_ApplicationUserId");

                    b.HasIndex("DepartmentId")
                        .HasName("IX_DepartmentId");

                    b.ToTable("UserDepartments");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.Area", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("Area")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_FmsbWeb.Area_dbo.AspNetUsers_ApplicationUserId");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUserClaims", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "User")
                        .WithMany("AspNetUserClaims")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_dbo.AspNetUserClaims_dbo.AspNetUsers_UserId")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUserLogins", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "User")
                        .WithMany("AspNetUserLogins")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_dbo.AspNetUserLogins_dbo.AspNetUsers_UserId")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUserRoles", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetRoles", "Role")
                        .WithMany("AspNetUserRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_dbo.AspNetUserRoles_dbo.AspNetRoles_RoleId")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "User")
                        .WithMany("AspNetUserRoles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_dbo.AspNetUserRoles_dbo.AspNetUsers_UserId")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.Assignments", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("Assignments")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_dbo.Assignments_dbo.AspNetUsers_ApplicationUserId");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.Departments", "Department")
                        .WithMany("Assignments")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_dbo.Assignments_dbo.Departments_DepartmentId")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.Topics", "Topics")
                        .WithMany("Assignments")
                        .HasForeignKey("TopicsId")
                        .HasConstraintName("FK_dbo.Assignments_dbo.Topics_TopicsId")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.Block", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("Block")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_DieStatus.Block_dbo.AspNetUsers_ApplicationUserId");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.PartNumber", "PartNumber")
                        .WithMany("Block")
                        .HasForeignKey("PartNumberId")
                        .HasConstraintName("FK_DieStatus.Block_DieStatus.PartNumber_PartNumberId");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.BreakdownReason2", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("BreakdownReason2")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_Alert.BreakdownReason2_dbo.AspNetUsers_ApplicationUserId");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.MaintenanceBreakDownReason", "MaintenanceBreakDownReason")
                        .WithMany("BreakdownReason2")
                        .HasForeignKey("MaintenanceBreakDownReasonId")
                        .HasConstraintName("FK_Alert.BreakdownReason2_Alert.MaintenanceBreakDownReason_MaintenanceBreakDownReasonId")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.CastingCell", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("CastingCell")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_DieStatus.CastingCell_dbo.AspNetUsers_ApplicationUserId");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.ClockNumber", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("ClockNumber")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_Overtime.ClockNumber_dbo.AspNetUsers_ApplicationUserId");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.Departments", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("Departments")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_dbo.Departments_dbo.AspNetUsers_ApplicationUserId");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.Die", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("Die")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_DieStatus.Die_dbo.AspNetUsers_ApplicationUserId");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.Block", "Block")
                        .WithMany("Die")
                        .HasForeignKey("BlockId")
                        .HasConstraintName("FK_DieStatus.Die_DieStatus.Block_BlockId")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.DieTracker", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("DieTracker")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_DieStatus.DieTracker_dbo.AspNetUsers_ApplicationUserId");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.CastingCell", "CastingCellNameNavigation")
                        .WithMany("DieTracker")
                        .HasForeignKey("CastingCellName")
                        .HasConstraintName("FK_DieStatus.DieTracker_DieStatus.CastingCell_CastingCellName")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.Die", "Die")
                        .WithMany("DieTracker")
                        .HasForeignKey("DieId")
                        .HasConstraintName("FK_DieStatus.DieTracker_DieStatus.Die_DieId")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.PartNumber", "PartNumber")
                        .WithMany("DieTracker")
                        .HasForeignKey("PartNumberId")
                        .HasConstraintName("FK_DieStatus.DieTracker_DieStatus.PartNumber_PartNumberId");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.Discipline", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("Discipline")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_Discipline.Discipline_dbo.AspNetUsers_ApplicationUserId");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.Departments", "Department")
                        .WithMany("Discipline")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Discipline.Discipline_dbo.Departments_DepartmentId")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.DisciplineLevels", "DisciplineLevels")
                        .WithMany("Discipline")
                        .HasForeignKey("DisciplineLevelsId")
                        .HasConstraintName("FK_Discipline.Discipline_Discipline.DisciplineLevels_DisciplineLevelsId")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.DisciplineTopic", "DisciplineTopic")
                        .WithMany("Discipline")
                        .HasForeignKey("DisciplineTopicId")
                        .HasConstraintName("FK_Discipline.Discipline_Discipline.DisciplineTopic_DisciplineTopicId")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.ShiftNames", "ShiftName")
                        .WithMany("Discipline")
                        .HasForeignKey("ShiftNameId")
                        .HasConstraintName("FK_Discipline.Discipline_dbo.ShiftNames_ShiftNameId")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.DisciplineLevels", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("DisciplineLevels")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_Discipline.DisciplineLevels_dbo.AspNetUsers_ApplicationUserId");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.DisciplineTopic", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("DisciplineTopic")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_Discipline.DisciplineTopic_dbo.AspNetUsers_ApplicationUserId");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.DowntimeTriggerThreshold", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("DowntimeTriggerThreshold")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_Iconics.DowntimeTriggerThreshold_dbo.AspNetUsers_ApplicationUserId");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.EmailNotificationRecipients", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.Departments", "Department")
                        .WithMany("EmailNotificationRecipients")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_dbo.EmailNotificationRecipients_dbo.Departments_DepartmentId")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.ShiftNames", "ShiftName")
                        .WithMany("EmailNotificationRecipients")
                        .HasForeignKey("ShiftNameId")
                        .HasConstraintName("FK_dbo.EmailNotificationRecipients_dbo.ShiftNames_ShiftNameId")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.EmployeeJob", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("EmployeeJob")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_Overtime.EmployeeJob_dbo.AspNetUsers_ApplicationUserId");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.ClockNumber", "ClockNumber")
                        .WithMany("EmployeeJob")
                        .HasForeignKey("ClockNumberId")
                        .HasConstraintName("FK_Overtime.EmployeeJob_Overtime.ClockNumber_ClockNumberId")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.Departments", "Department")
                        .WithMany("EmployeeJob")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Overtime.EmployeeJob_dbo.Departments_DepartmentId")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.JobTitle", "JobTitle")
                        .WithMany("EmployeeJob")
                        .HasForeignKey("JobTitleId")
                        .HasConstraintName("FK_Overtime.EmployeeJob_Overtime.JobTitle_JobTitleId")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.ShiftNames", "ShiftName")
                        .WithMany("EmployeeJob")
                        .HasForeignKey("ShiftNameId")
                        .HasConstraintName("FK_Overtime.EmployeeJob_dbo.ShiftNames_ShiftNameId")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.EstimatedPm", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("EstimatedPm")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_Maintenance.EstimatedPM_dbo.AspNetUsers_ApplicationUserId");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.Machine", "Machine")
                        .WithMany("EstimatedPm")
                        .HasForeignKey("MachineId")
                        .HasConstraintName("FK_Maintenance.EstimatedPM_Maintenance.Machine_MachineId")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.Forklift", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("Forklift")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_Alert.Forklift_dbo.AspNetUsers_ApplicationUserId");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.ForkliftTask", "ForkliftTask")
                        .WithMany("Forklift")
                        .HasForeignKey("ForkliftTaskId")
                        .HasConstraintName("FK_Alert.Forklift_Alert.ForkliftTask_ForkliftTaskId")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.Machine", "Machine")
                        .WithMany("Forklift")
                        .HasForeignKey("MachineId")
                        .HasConstraintName("FK_Alert.Forklift_Maintenance.Machine_MachineId")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.ForkliftTask", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("ForkliftTask")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_Alert.ForkliftTask_dbo.AspNetUsers_ApplicationUserId");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.Departments", "Department")
                        .WithMany("ForkliftTask")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Alert.ForkliftTask_dbo.Departments_DepartmentId")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.GageCall", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("GageCall")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_Alert.GageCall_dbo.AspNetUsers_ApplicationUserId");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.GaugeCallType", "GaugeCallType")
                        .WithMany("GageCall")
                        .HasForeignKey("GaugeCallTypeId")
                        .HasConstraintName("FK_Alert.GageCall_Gauge.GaugeCallType_GaugeCallTypeId")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.GaugeStation", "GaugeStation")
                        .WithMany("GageCall")
                        .HasForeignKey("GaugeStationId")
                        .HasConstraintName("FK_Alert.GageCall_Gauge.GaugeStation_GaugeStationId")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.Machine", "Machine")
                        .WithMany("GageCall")
                        .HasForeignKey("MachineId")
                        .HasConstraintName("FK_Alert.GageCall_Maintenance.Machine_MachineId")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.OperatorDowntime", "OperatorDowntime")
                        .WithMany("GageCall")
                        .HasForeignKey("OperatorDowntimeId")
                        .HasConstraintName("FK_Alert.GageCall_Iconics.OperatorDowntime_OperatorDowntimeId");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.HxHpushAlerts", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("HxHpushAlerts")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_HxH.HxHPushAlerts_dbo.AspNetUsers_ApplicationUserId");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.JobTitle", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("JobTitle")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_Overtime.JobTitle_dbo.AspNetUsers_ApplicationUserId");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.Departments", "Department")
                        .WithMany("JobTitle")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Overtime.JobTitle_dbo.Departments_DepartmentId")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.Kpi", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("Kpi")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_FmsbWeb.KPI_dbo.AspNetUsers_ApplicationUserId");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.KpiByProgram1", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("KpiByProgram1")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_FmsbWeb.KpiByProgram_dbo.AspNetUsers_ApplicationUserId");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.Area", "Area")
                        .WithMany("KpiByProgram1")
                        .HasForeignKey("AreaId")
                        .HasConstraintName("FK_FmsbWeb.KpiByProgram_FmsbWeb.Area_AreaId")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.Kpi", "Kpi")
                        .WithMany("KpiByProgram1")
                        .HasForeignKey("Kpiid")
                        .HasConstraintName("FK_FmsbWeb.KpiByProgram_FmsbWeb.KPI_KPIId")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.Program", "Program")
                        .WithMany("KpiByProgram1")
                        .HasForeignKey("ProgramId")
                        .HasConstraintName("FK_FmsbWeb.KpiByProgram_FmsbWeb.Program_ProgramId")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.Kpitarget1", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("Kpitarget1")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_FmsbWeb.KPITarget_dbo.AspNetUsers_ApplicationUserId");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.Area", "Area")
                        .WithMany("Kpitarget1")
                        .HasForeignKey("AreaId")
                        .HasConstraintName("FK_FmsbWeb.KPITarget_FmsbWeb.Area_AreaId")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.Kpi", "Kpi")
                        .WithMany("Kpitarget1")
                        .HasForeignKey("Kpiid")
                        .HasConstraintName("FK_FmsbWeb.KPITarget_FmsbWeb.KPI_KPIId")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.Machine", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("Machine")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_Maintenance.Machine_dbo.AspNetUsers_ApplicationUserId");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.Departments", "Department")
                        .WithMany("Machine")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Maintenance.Machine_dbo.Departments_DepartmentId")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.MaintenanceAlert", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("MaintenanceAlert")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_Alert.MaintenanceAlert_dbo.AspNetUsers_ApplicationUserId");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.BreakdownReason2", "BreakdownReason2")
                        .WithMany("MaintenanceAlert")
                        .HasForeignKey("BreakdownReason2Id")
                        .HasConstraintName("FK_Alert.MaintenanceAlert_Alert.BreakdownReason2_BreakdownReason2Id");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.Machine", "Machine")
                        .WithMany("MaintenanceAlert")
                        .HasForeignKey("MachineId")
                        .HasConstraintName("FK_Alert.MaintenanceAlert_Maintenance.Machine_MachineId")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.MaintenanceBreakDownReason", "MaintenanceBreakDownReason")
                        .WithMany("MaintenanceAlert")
                        .HasForeignKey("MaintenanceBreakDownReasonId")
                        .HasConstraintName("FK_Alert.MaintenanceAlert_Alert.MaintenanceBreakDownReason_MaintenanceBreakDownReasonId")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.OperatorDowntime", "OperatorDowntime")
                        .WithMany("MaintenanceAlert")
                        .HasForeignKey("OperatorDowntimeId")
                        .HasConstraintName("FK_Alert.MaintenanceAlert_Iconics.OperatorDowntime_OperatorDowntimeId");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.SubMachine", "SubMachine")
                        .WithMany("MaintenanceAlert")
                        .HasForeignKey("SubMachineId")
                        .HasConstraintName("FK_Alert.MaintenanceAlert_Maintenance.SubMachine_SubMachineId")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.MaintenanceAlertLog", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("MaintenanceAlertLog")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_Alert.MaintenanceAlertLog_dbo.AspNetUsers_ApplicationUserId");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.BreakdownReason2", "BreakdownReason2")
                        .WithMany("MaintenanceAlertLog")
                        .HasForeignKey("BreakdownReason2Id")
                        .HasConstraintName("FK_Alert.MaintenanceAlertLog_Alert.BreakdownReason2_BreakdownReason2Id");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.Machine", "Machine")
                        .WithMany("MaintenanceAlertLog")
                        .HasForeignKey("MachineId")
                        .HasConstraintName("FK_Alert.MaintenanceAlertLog_Maintenance.Machine_MachineId")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.MaintenanceBreakDownReason", "MaintenanceBreakDownReason")
                        .WithMany("MaintenanceAlertLog")
                        .HasForeignKey("MaintenanceBreakDownReasonId")
                        .HasConstraintName("FK_Alert.MaintenanceAlertLog_Alert.MaintenanceBreakDownReason_MaintenanceBreakDownReasonId")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.SubMachine", "SubMachine")
                        .WithMany("MaintenanceAlertLog")
                        .HasForeignKey("SubMachineId")
                        .HasConstraintName("FK_Alert.MaintenanceAlertLog_Maintenance.SubMachine_SubMachineId")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.MaintenanceBreakDownReason", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("MaintenanceBreakDownReason")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_Alert.MaintenanceBreakDownReason_dbo.AspNetUsers_ApplicationUserId");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.Departments", "Department")
                        .WithMany("MaintenanceBreakDownReason")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Alert.MaintenanceBreakDownReason_dbo.Departments_DepartmentId");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.MaintenanceTech", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("MaintenanceTech")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_Maintenance.MaintenanceTech_dbo.AspNetUsers_ApplicationUserId");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.ShiftNames", "ShiftName")
                        .WithMany("MaintenanceTech")
                        .HasForeignKey("ShiftNameId")
                        .HasConstraintName("FK_Maintenance.MaintenanceTech_dbo.ShiftNames_ShiftNameId")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.OperatorDowntime", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.BreakdownReason2", "BreakdownReason2")
                        .WithMany("OperatorDowntime")
                        .HasForeignKey("BreakdownReason2Id")
                        .HasConstraintName("FK_Iconics.OperatorDowntime_Alert.BreakdownReason2_BreakdownReason2Id");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.Machine", "Machine")
                        .WithMany("OperatorDowntime")
                        .HasForeignKey("MachineId")
                        .HasConstraintName("FK_Iconics.OperatorDowntime_Maintenance.Machine_MachineId");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.MaintenanceBreakDownReason", "MaintenanceBreakDownReason")
                        .WithMany("OperatorDowntime")
                        .HasForeignKey("MaintenanceBreakDownReasonId")
                        .HasConstraintName("FK_Iconics.OperatorDowntime_Alert.MaintenanceBreakDownReason_MaintenanceBreakDownReasonId");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.SubMachine", "SubMachine")
                        .WithMany("OperatorDowntime")
                        .HasForeignKey("SubMachineId")
                        .HasConstraintName("FK_Iconics.OperatorDowntime_Maintenance.SubMachine_SubMachineId");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.OvertimeCategory", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("OvertimeCategory")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_Overtime.OvertimeCategory_dbo.AspNetUsers_ApplicationUserId");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.OvertimeLog", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("OvertimeLog")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_Overtime.OvertimeLog_dbo.AspNetUsers_ApplicationUserId");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.ClockNumber", "ClockNumber")
                        .WithMany("OvertimeLog")
                        .HasForeignKey("ClockNumberId")
                        .HasConstraintName("FK_Overtime.OvertimeLog_Overtime.ClockNumber_ClockNumberId")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.Departments", "Department")
                        .WithMany("OvertimeLog")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Overtime.OvertimeLog_dbo.Departments_DepartmentId")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.OvertimeCategory", "OvertimeCategory")
                        .WithMany("OvertimeLog")
                        .HasForeignKey("OvertimeCategoryId")
                        .HasConstraintName("FK_Overtime.OvertimeLog_Overtime.OvertimeCategory_OvertimeCategoryId")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.PartNumber", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("PartNumber")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_DieStatus.PartNumber_dbo.AspNetUsers_ApplicationUserId");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.PreventiveMaintenance", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("PreventiveMaintenance")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_Maintenance.PreventiveMaintenance_dbo.AspNetUsers_ApplicationUserId");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.Machine", "Machine")
                        .WithMany("PreventiveMaintenance")
                        .HasForeignKey("MachineId")
                        .HasConstraintName("FK_Maintenance.PreventiveMaintenance_Maintenance.Machine_MachineId")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.ProcessTech", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("ProcessTech")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_Alert.ProcessTech_dbo.AspNetUsers_ApplicationUserId");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.BreakdownReason2", "BreakdownReason2")
                        .WithMany("ProcessTech")
                        .HasForeignKey("BreakdownReason2Id")
                        .HasConstraintName("FK_Alert.ProcessTech_Alert.BreakdownReason2_BreakdownReason2Id");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.Machine", "Machine")
                        .WithMany("ProcessTech")
                        .HasForeignKey("MachineId")
                        .HasConstraintName("FK_Alert.ProcessTech_Maintenance.Machine_MachineId")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.MaintenanceBreakDownReason", "MaintenanceBreakDownReason")
                        .WithMany("ProcessTech")
                        .HasForeignKey("MaintenanceBreakDownReasonId")
                        .HasConstraintName("FK_Alert.ProcessTech_Alert.MaintenanceBreakDownReason_MaintenanceBreakDownReasonId")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.OperatorDowntime", "OperatorDowntime")
                        .WithMany("ProcessTech")
                        .HasForeignKey("OperatorDowntimeId")
                        .HasConstraintName("FK_Alert.ProcessTech_Iconics.OperatorDowntime_OperatorDowntimeId");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.SubMachine", "SubMachine")
                        .WithMany("ProcessTech")
                        .HasForeignKey("SubMachineId")
                        .HasConstraintName("FK_Alert.ProcessTech_Maintenance.SubMachine_SubMachineId")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.ProcessTechName", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("ProcessTechName")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_ProcessTechs.ProcessTechName_dbo.AspNetUsers_ApplicationUserId");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.Departments", "Department")
                        .WithMany("ProcessTechName")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_ProcessTechs.ProcessTechName_dbo.Departments_DepartmentId")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.ShiftNames", "ShiftName")
                        .WithMany("ProcessTechName")
                        .HasForeignKey("ShiftNameId")
                        .HasConstraintName("FK_ProcessTechs.ProcessTechName_dbo.ShiftNames_ShiftNameId")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.Program", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("Program")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_FmsbWeb.Program_dbo.AspNetUsers_ApplicationUserId");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.SubMachine", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("SubMachine")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_Maintenance.SubMachine_dbo.AspNetUsers_ApplicationUserId");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.Machine", "Machine")
                        .WithMany("SubMachine")
                        .HasForeignKey("MachineId")
                        .HasConstraintName("FK_Maintenance.SubMachine_Maintenance.Machine_MachineId")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.SubMachinePm", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("SubMachinePm")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_Maintenance.SubMachinePM_dbo.AspNetUsers_ApplicationUserId");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.PreventiveMaintenance", "PreventiveMaintenance")
                        .WithMany("SubMachinePm")
                        .HasForeignKey("PreventiveMaintenanceId")
                        .HasConstraintName("FK_Maintenance.SubMachinePM_Maintenance.PreventiveMaintenance_PreventiveMaintenanceId")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.SubMachine", "SubMachine")
                        .WithMany("SubMachinePm")
                        .HasForeignKey("SubMachineId")
                        .HasConstraintName("FK_Maintenance.SubMachinePM_Maintenance.SubMachine_SubMachineId")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.SupervisorConversations", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("SupervisorConversations")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_dbo.SupervisorConversations_dbo.AspNetUsers_ApplicationUserId");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.Assignments", "Assignments")
                        .WithMany("SupervisorConversations")
                        .HasForeignKey("AssignmentsId")
                        .HasConstraintName("FK_dbo.SupervisorConversations_dbo.Assignments_AssignmentsId")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.Departments", "Department")
                        .WithMany("SupervisorConversations")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_dbo.SupervisorConversations_dbo.Departments_DepartmentId")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.EmployeeFeedbacks", "EmployeeFeedback")
                        .WithMany("SupervisorConversations")
                        .HasForeignKey("EmployeeFeedbackId")
                        .HasConstraintName("FK_dbo.SupervisorConversations_dbo.EmployeeFeedbacks_EmployeeFeedbackId")
                        .IsRequired();

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.ShiftNames", "ShiftName")
                        .WithMany("SupervisorConversations")
                        .HasForeignKey("ShiftNameId")
                        .HasConstraintName("FK_dbo.SupervisorConversations_dbo.ShiftNames_ShiftNameId")
                        .IsRequired();
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.Topics", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("Topics")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_dbo.Topics_dbo.AspNetUsers_ApplicationUserId");
                });

            modelBuilder.Entity("FmsbwebCoreApi.Entity.FmsbMvc.UserDepartments", b =>
                {
                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.AspNetUsers", "ApplicationUser")
                        .WithMany("UserDepartments")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_dbo.UserDepartments_dbo.AspNetUsers_ApplicationUserId");

                    b.HasOne("FmsbwebCoreApi.Entity.FmsbMvc.Departments", "Department")
                        .WithMany("UserDepartments")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_dbo.UserDepartments_dbo.Departments_DepartmentId")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
